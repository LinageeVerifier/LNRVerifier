{"ast":null,"code":"import _toConsumableArray from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nfunction createSyncStoragePersister(_ref) {\n  var storage = _ref.storage,\n      _ref$key = _ref.key,\n      key = _ref$key === void 0 ? \"REACT_QUERY_OFFLINE_CACHE\" : _ref$key,\n      _ref$throttleTime = _ref.throttleTime,\n      throttleTime = _ref$throttleTime === void 0 ? 1000 : _ref$throttleTime,\n      _ref$serialize = _ref.serialize,\n      serialize = _ref$serialize === void 0 ? JSON.stringify : _ref$serialize,\n      _ref$deserialize = _ref.deserialize,\n      deserialize = _ref$deserialize === void 0 ? JSON.parse : _ref$deserialize,\n      retry = _ref.retry;\n\n  if (typeof storage !== 'undefined') {\n    var trySave = function trySave(persistedClient) {\n      try {\n        storage.setItem(key, serialize(persistedClient));\n      } catch (error) {\n        return error;\n      }\n    };\n\n    return {\n      persistClient: throttle(function (persistedClient) {\n        var client = persistedClient;\n        var error = trySave(client);\n        var errorCount = 0;\n\n        while (error && client) {\n          errorCount++;\n          client = retry == null ? void 0 : retry({\n            persistedClient: client,\n            error: error,\n            errorCount: errorCount\n          });\n\n          if (client) {\n            error = trySave(client);\n          }\n        }\n      }, throttleTime),\n      restoreClient: function restoreClient() {\n        var cacheString = storage.getItem(key);\n\n        if (!cacheString) {\n          return;\n        }\n\n        return deserialize(cacheString);\n      },\n      removeClient: function removeClient() {\n        storage.removeItem(key);\n      }\n    };\n  }\n\n  return {\n    persistClient: noop,\n    restoreClient: function restoreClient() {\n      return undefined;\n    },\n    removeClient: noop\n  };\n}\n\nfunction throttle(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var timer = null;\n  var params;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    params = args;\n\n    if (timer === null) {\n      timer = setTimeout(function () {\n        func.apply(void 0, _toConsumableArray(params));\n        timer = null;\n      }, wait);\n    }\n  };\n} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\nfunction noop() {}\n\nexport { createSyncStoragePersister }; //# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module"}