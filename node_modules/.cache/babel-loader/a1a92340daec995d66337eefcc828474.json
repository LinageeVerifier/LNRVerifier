{"ast":null,"code":"import _objectSpread from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"client\", \"children\", \"persistOptions\", \"onSuccess\"];\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nimport { persistQueryClient } from '@tanstack/query-persist-client-core';\nimport { QueryClientProvider, IsRestoringProvider } from '@tanstack/react-query';\n\nvar PersistQueryClientProvider = function PersistQueryClientProvider(_ref) {\n  var client = _ref.client,\n      children = _ref.children,\n      persistOptions = _ref.persistOptions,\n      onSuccess = _ref.onSuccess,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isRestoring = _React$useState2[0],\n      setIsRestoring = _React$useState2[1];\n\n  var refs = React.useRef({\n    persistOptions: persistOptions,\n    onSuccess: onSuccess\n  });\n  React.useEffect(function () {\n    refs.current = {\n      persistOptions: persistOptions,\n      onSuccess: onSuccess\n    };\n  });\n  React.useEffect(function () {\n    var isStale = false;\n    setIsRestoring(true);\n\n    var _persistQueryClient = persistQueryClient(_objectSpread(_objectSpread({}, refs.current.persistOptions), {}, {\n      queryClient: client\n    })),\n        _persistQueryClient2 = _slicedToArray(_persistQueryClient, 2),\n        unsubscribe = _persistQueryClient2[0],\n        promise = _persistQueryClient2[1];\n\n    promise.then(function () {\n      if (!isStale) {\n        refs.current.onSuccess == null ? void 0 : refs.current.onSuccess();\n        setIsRestoring(false);\n      }\n    });\n    return function () {\n      isStale = true;\n      unsubscribe();\n    };\n  }, [client]);\n  return /*#__PURE__*/React.createElement(QueryClientProvider, _extends({\n    client: client\n  }, props), /*#__PURE__*/React.createElement(IsRestoringProvider, {\n    value: isRestoring\n  }, children));\n};\n\nexport { PersistQueryClientProvider }; //# sourceMappingURL=PersistQueryClientProvider.mjs.map","map":null,"metadata":{},"sourceType":"module"}