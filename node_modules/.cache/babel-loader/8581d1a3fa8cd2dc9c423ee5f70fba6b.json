{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"pageParam\"],\n    _excluded2 = [\"pageParam\"];\nimport { QueryObserver } from './queryObserver.mjs';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.mjs';\n\nvar InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inherits(InfiniteQueryObserver, _QueryObserver);\n\n  var _super = _createSuper(InfiniteQueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    _classCallCheck(this, InfiniteQueryObserver);\n\n    return _super.call(this, client, options);\n  }\n\n  _createClass(InfiniteQueryObserver, [{\n    key: \"bindMethods\",\n    value: function bindMethods() {\n      _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"bindMethods\", this).call(this);\n\n      this.fetchNextPage = this.fetchNextPage.bind(this);\n      this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options, notifyOptions) {\n      _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"setOptions\", this).call(this, _objectSpread(_objectSpread({}, options), {}, {\n        behavior: infiniteQueryBehavior()\n      }), notifyOptions);\n    }\n  }, {\n    key: \"getOptimisticResult\",\n    value: function getOptimisticResult(options) {\n      options.behavior = infiniteQueryBehavior();\n      return _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"getOptimisticResult\", this).call(this, options);\n    }\n  }, {\n    key: \"fetchNextPage\",\n    value: function fetchNextPage() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          pageParam = _ref.pageParam,\n          options = _objectWithoutProperties(_ref, _excluded);\n\n      return this.fetch(_objectSpread(_objectSpread({}, options), {}, {\n        meta: {\n          fetchMore: {\n            direction: 'forward',\n            pageParam: pageParam\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"fetchPreviousPage\",\n    value: function fetchPreviousPage() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          pageParam = _ref2.pageParam,\n          options = _objectWithoutProperties(_ref2, _excluded2);\n\n      return this.fetch(_objectSpread(_objectSpread({}, options), {}, {\n        meta: {\n          fetchMore: {\n            direction: 'backward',\n            pageParam: pageParam\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"createResult\",\n    value: function createResult(query, options) {\n      var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n      var state = query.state;\n\n      var result = _get(_getPrototypeOf(InfiniteQueryObserver.prototype), \"createResult\", this).call(this, query, options);\n\n      return _objectSpread(_objectSpread({}, result), {}, {\n        fetchNextPage: this.fetchNextPage,\n        fetchPreviousPage: this.fetchPreviousPage,\n        hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n        hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n        isFetchingNextPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n        isFetchingPreviousPage: state.fetchStatus === 'fetching' && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n      });\n    }\n  }]);\n\n  return InfiniteQueryObserver;\n}(QueryObserver);\n\nexport { InfiniteQueryObserver }; //# sourceMappingURL=infiniteQueryObserver.mjs.map","map":null,"metadata":{},"sourceType":"module"}