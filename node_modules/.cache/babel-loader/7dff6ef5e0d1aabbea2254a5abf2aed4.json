{"ast":null,"code":"import { createSyncStoragePersister } from '@tanstack/query-sync-storage-persister';\nimport { useQueryClient, useIsRestoring, useQueryErrorResetBoundary, notifyManager, InfiniteQueryObserver, QueryObserver, QueryClient, QueryClientProvider, useMutation } from '@tanstack/react-query';\nimport { persistQueryClient } from '@tanstack/react-query-persist-client';\nimport { watchProvider, getProvider, watchWebSocketProvider, getWebSocketProvider, fetchBlockNumber, fetchFeeData, deepEqual, watchSigner, fetchSigner, createClient as createClient$1, getAccount, watchAccount, fetchBalance, connect, disconnect, getNetwork, watchNetwork, signMessage, signTypedData, switchNetwork, getContract, readContracts, parseContractResult, readContract, writeContract, deprecatedWriteContract, prepareWriteContract, fetchToken, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, deprecatedSendTransaction, prepareSendTransaction, sendTransaction, fetchTransaction, waitForTransaction } from '@wagmi/core';\nexport { AddChainError, ChainDoesNotSupportMulticallError, ChainMismatchError, ChainNotConfiguredError, Client, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ContractMethodDoesNotExistError, ContractMethodNoResultError, ContractMethodRevertedError, ContractResultDecodeError, ProviderChainsNotFound, ProviderRpcError, ResourceUnavailableError, RpcError, SwitchChainError, SwitchChainNotSupportedError, UserRejectedRequestError, alchemyRpcUrls, allChains, chain, chainId, configureChains, createStorage, deepEqual, defaultChains, defaultL2Chains, erc20ABI, erc721ABI, etherscanBlockExplorers, infuraRpcUrls, publicRpcUrls, readContracts } from '@wagmi/core';\nimport * as React from 'react';\nimport * as pkg from 'use-sync-external-store/shim/index.js';\nimport { BigNumber } from 'ethers/lib/ethers';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\nimport { debounce } from '@wagmi/core/internal';\nconst useSyncExternalStore = pkg.useSyncExternalStore;\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\n\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\n\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach(key => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        // @ts-expect-error â€“ aware we are mutating private `trackedProps` property.\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(_ref => {\n      var _defaultedOptions$onS, _defaultedOptions$onS2;\n\n      let {\n        data\n      } = _ref;\n      (_defaultedOptions$onS = defaultedOptions.onSuccess) === null || _defaultedOptions$onS === void 0 ? void 0 : _defaultedOptions$onS.call(defaultedOptions, data);\n      (_defaultedOptions$onS2 = defaultedOptions.onSettled) === null || _defaultedOptions$onS2 === void 0 ? void 0 : _defaultedOptions$onS2.call(defaultedOptions, data, null);\n    }).catch(error => {\n      var _defaultedOptions$onE, _defaultedOptions$onS3;\n\n      errorResetBoundary.clearReset();\n      (_defaultedOptions$onE = defaultedOptions.onError) === null || _defaultedOptions$onE === void 0 ? void 0 : _defaultedOptions$onE.call(defaultedOptions, error);\n      (_defaultedOptions$onS3 = defaultedOptions.onSettled) === null || _defaultedOptions$onS3 === void 0 ? void 0 : _defaultedOptions$onS3.call(defaultedOptions, undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  }\n\n  const status = result.status === 'loading' && result.fetchStatus === 'idle' ? 'idle' : result.status;\n  const isIdle = status === 'idle';\n  const isLoading = status === 'loading' && result.fetchStatus === 'fetching';\n  return { ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(parsedOptions, InfiniteQueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  }; // Handle result property usage tracking\n\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(parsedOptions, QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  }; // Handle result property usage tracking\n\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\nfunction useProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useSyncExternalStoreWithSelector(cb => watchProvider({\n    chainId\n  }, cb), () => getProvider({\n    chainId\n  }), () => getProvider({\n    chainId\n  }), x => x, (a, b) => a.network.chainId === b.network.chainId);\n}\n\nfunction useWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useSyncExternalStoreWithSelector(cb => watchWebSocketProvider({\n    chainId\n  }, cb), () => getWebSocketProvider({\n    chainId\n  }), () => getWebSocketProvider({\n    chainId\n  }), x => x, (a, b) => (a === null || a === void 0 ? void 0 : a.network.chainId) === (b === null || b === void 0 ? void 0 : b.network.chainId));\n}\n\nfunction useChainId() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider({\n    chainId\n  });\n  return provider.network.chainId;\n}\n\nfunction useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\n\nconst queryKey$f = _ref => {\n  let {\n    chainId\n  } = _ref;\n  return [{\n    entity: 'blockNumber',\n    chainId\n  }];\n};\n\nconst queryFn$f = _ref2 => {\n  let {\n    queryKey: [{\n      chainId\n    }]\n  } = _ref2;\n  return fetchBlockNumber({\n    chainId\n  });\n};\n\nfunction useBlockNumber() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    staleTime,\n    suspense,\n    watch = false,\n    onBlock,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const provider = useProvider({\n    chainId\n  });\n  const webSocketProvider = useWebSocketProvider({\n    chainId\n  });\n  const queryClient = useQueryClient();\n  React.useEffect(() => {\n    if (!watch && !onBlock) return; // We need to debounce the listener as we want to opt-out\n    // of the behavior where ethers emits a \"block\" event for\n    // every block that was missed in between the `pollingInterval`.\n    // We are setting a wait time of 1 as emitting an event in\n    // ethers takes ~0.1ms.\n\n    const listener = debounce(blockNumber => {\n      // Just to be safe in case the provider implementation\n      // calls the event callback after .off() has been called\n      if (watch) queryClient.setQueryData(queryKey$f({\n        chainId\n      }), blockNumber);\n      if (onBlock) onBlock(blockNumber);\n    }, 1);\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n    provider_.on('block', listener);\n    return () => {\n      provider_.off('block', listener);\n    };\n  }, [chainId, onBlock, provider, queryClient, watch, webSocketProvider]);\n  return useQuery(queryKey$f({\n    chainId\n  }), queryFn$f, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$e = _ref => {\n  let {\n    chainId,\n    formatUnits\n  } = _ref;\n  return [{\n    entity: 'feeData',\n    chainId,\n    formatUnits\n  }];\n};\n\nconst queryFn$e = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      formatUnits\n    }]\n  } = _ref2;\n  return fetchFeeData({\n    chainId,\n    formatUnits\n  });\n};\n\nfunction useFeeData() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits = 'wei',\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const feeDataQuery = useQuery(queryKey$e({\n    chainId,\n    formatUnits\n  }), queryFn$e, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    chainId,\n    watch\n  });\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!watch) return;\n    if (!blockNumber) return;\n    feeDataQuery.refetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [blockNumber]);\n  return feeDataQuery;\n}\n\nfunction useInvalidateOnBlock(_ref) {\n  let {\n    chainId,\n    enabled,\n    queryKey\n  } = _ref;\n  const queryClient = useQueryClient();\n  useBlockNumber({\n    chainId,\n    onBlock: enabled ? () => queryClient.invalidateQueries(queryKey) : undefined\n  });\n}\n\nconst isPlainObject = obj => typeof obj === 'object' && !Array.isArray(obj);\n\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot) {\n  let getServerSnapshot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getSnapshot;\n  let isEqual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (a, b) => deepEqual(a, b);\n  const trackedKeys = React.useRef([]);\n  const result = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, x => x, (a, b) => {\n    if (isPlainObject(a) && isPlainObject(b)) {\n      for (const key of trackedKeys.current) {\n        const equal = isEqual(a[key], b[key]);\n        if (!equal) return false;\n      }\n\n      return true;\n    }\n\n    return isEqual(a, b);\n  });\n\n  if (isPlainObject(result)) {\n    const trackedResult = { ...result\n    };\n    Object.defineProperties(trackedResult, Object.entries(trackedResult).reduce((res, _ref) => {\n      let [key, value] = _ref;\n      return { ...res,\n        [key]: {\n          configurable: false,\n          enumerable: true,\n          get: () => {\n            if (!trackedKeys.current.includes(key)) {\n              trackedKeys.current.push(key);\n            }\n\n            return value;\n          }\n        }\n      };\n    }, {}));\n    return trackedResult;\n  }\n\n  return result;\n}\n\nconst queryKey$d = () => [{\n  entity: 'signer'\n}];\n\nconst queryFn$d = () => fetchSigner();\n\nfunction useSigner() {\n  let {\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const signerQuery = useQuery(queryKey$d(), queryFn$d, {\n    cacheTime: 0,\n    staleTime: 0,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient();\n  React.useEffect(() => {\n    const unwatch = watchSigner(signer => queryClient.setQueryData(queryKey$d(), signer));\n    return unwatch;\n  }, [queryClient]);\n  return signerQuery;\n}\n\nconst findAndReplace = (cacheRef, _ref) => {\n  let {\n    find,\n    replace\n  } = _ref;\n\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n\n  if (typeof cacheRef !== 'object') {\n    return cacheRef;\n  }\n\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref2) => {\n      let [key, value] = _ref2;\n      return { ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n\n  return cacheRef;\n};\n\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: data => data.type === 'BigNumber',\n    replace: data => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n/**\n * @function getReferenceKey\n *\n * @description\n * get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */\n\n\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join('.') || '.';\n}\n/**\n * @function getCutoff\n *\n * @description\n * faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */\n\n\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @function createReplacer\n *\n * @description\n * create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */\n\n\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === 'function';\n  const hasCircularReplacer = typeof circularReplacer === 'function';\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === 'object') {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : \"[ref=\".concat(getReferenceKey(keys, valueCutoff), \"]\");\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\n/**\n * @function stringify\n *\n * @description\n * stringifier that handles circular values\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */\n\n\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent !== null && indent !== void 0 ? indent : undefined);\n}\n\nfunction createClient(_ref) {\n  let {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: {\n          cacheTime: 1000 * 60 * 60 * 24,\n          // 24 hours\n          networkMode: 'offlineFirst',\n          refetchOnWindowFocus: false,\n          retry: 0\n        },\n        mutations: {\n          networkMode: 'offlineFirst'\n        }\n      }\n    }),\n    persister = typeof window !== 'undefined' ? createSyncStoragePersister({\n      key: 'wagmi.cache',\n      storage: window.localStorage,\n      serialize,\n      deserialize\n    }) : undefined,\n    ...config\n  } = _ref;\n  const client = createClient$1(config);\n  if (persister) persistQueryClient({\n    queryClient,\n    persister,\n    dehydrateOptions: {\n      shouldDehydrateQuery: query => query.cacheTime !== 0 && query.queryHash !== JSON.stringify(queryKey$d())\n    }\n  });\n  return Object.assign(client, {\n    queryClient\n  });\n}\n\nconst Context = /*#__PURE__*/React.createContext(undefined);\n\nfunction WagmiConfig(_ref) {\n  let {\n    children,\n    client\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: client.queryClient\n  }, children));\n}\n\nfunction useClient() {\n  const client = React.useContext(Context);\n  if (!client) throw new Error(['`useClient` must be used within `WagmiConfig`.\\n', 'Read more: https://wagmi.sh/docs/WagmiConfig'].join('\\n'));\n  return client;\n}\n\nfunction useAccount() {\n  let {\n    onConnect,\n    onDisconnect\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const account = useSyncExternalStoreWithTracked(watchAccount, getAccount);\n  const {\n    subscribe\n  } = useClient();\n  React.useEffect(() => {\n    // No need to subscribe if these callbacks aren't defined\n    if (!onConnect && !onDisconnect) return; // Trigger update when status changes\n\n    const unsubscribe = subscribe(state => state.status, (status, prevStatus) => {\n      if (!!onConnect && status === 'connected') {\n        const {\n          address,\n          connector\n        } = getAccount();\n        onConnect({\n          address,\n          connector,\n          isReconnected: prevStatus === 'reconnecting'\n        });\n      }\n\n      if (!!onDisconnect && prevStatus !== 'connecting' && status === 'disconnected') onDisconnect();\n    });\n    return unsubscribe;\n  }, [onConnect, onDisconnect, subscribe]);\n  return account;\n}\n\nconst queryKey$c = _ref => {\n  let {\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  } = _ref;\n  return [{\n    entity: 'balance',\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  }];\n};\n\nconst queryFn$c = _ref2 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      chainId,\n      formatUnits,\n      token\n    }]\n  } = _ref2;\n  if (!addressOrName) throw new Error('address is required');\n  return fetchBalance({\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  });\n};\n\nfunction useBalance() {\n  let {\n    addressOrName,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits,\n    staleTime,\n    suspense,\n    token,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const balanceQuery = useQuery(queryKey$c({\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  }), queryFn$c, {\n    cacheTime,\n    enabled: Boolean(enabled && addressOrName),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    chainId,\n    watch\n  });\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!watch) return;\n    if (!blockNumber) return;\n    if (!addressOrName) return;\n    balanceQuery.refetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [blockNumber]);\n  return balanceQuery;\n}\n\nconst mutationKey$8 = args => [{\n  entity: 'connect',\n  ...args\n}];\n\nconst mutationFn$7 = args => {\n  const {\n    connector,\n    chainId\n  } = args;\n  if (!connector) throw new Error('connector is required');\n  return connect({\n    connector,\n    chainId\n  });\n};\n\nfunction useConnect() {\n  let {\n    chainId,\n    connector,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = useClient();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$8({\n    connector,\n    chainId\n  }), mutationFn$7, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect = React.useCallback(args => {\n    var _args$chainId, _args$connector;\n\n    return mutate({\n      chainId: (_args$chainId = args === null || args === void 0 ? void 0 : args.chainId) !== null && _args$chainId !== void 0 ? _args$chainId : chainId,\n      connector: (_args$connector = args === null || args === void 0 ? void 0 : args.connector) !== null && _args$connector !== void 0 ? _args$connector : connector\n    });\n  }, [chainId, connector, mutate]);\n  const connectAsync = React.useCallback(args => {\n    var _args$chainId2, _args$connector2;\n\n    return mutateAsync({\n      chainId: (_args$chainId2 = args === null || args === void 0 ? void 0 : args.chainId) !== null && _args$chainId2 !== void 0 ? _args$chainId2 : chainId,\n      connector: (_args$connector2 = args === null || args === void 0 ? void 0 : args.connector) !== null && _args$connector2 !== void 0 ? _args$connector2 : connector\n    });\n  }, [chainId, connector, mutateAsync]);\n  return {\n    connect,\n    connectAsync,\n    connectors: client.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables === null || variables === void 0 ? void 0 : variables.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$7 = [{\n  entity: 'disconnect'\n}];\n\nconst mutationFn$6 = () => disconnect();\n\nfunction useDisconnect() {\n  let {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey$7, mutationFn$6, { ...(onError ? {\n      onError(error, _variables, context) {\n        onError(error, context);\n      }\n\n    } : {}),\n    onMutate,\n    ...(onSettled ? {\n      onSettled(_data, error, _variables, context) {\n        onSettled(error, context);\n      }\n\n    } : {}),\n    ...(onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n\n    } : {})\n  });\n  return {\n    disconnect,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\nfunction useNetwork() {\n  return useSyncExternalStoreWithTracked(watchNetwork, getNetwork);\n}\n\nconst mutationKey$6 = args => [{\n  entity: 'signMessage',\n  ...args\n}];\n\nconst mutationFn$5 = args => {\n  const {\n    message\n  } = args;\n  if (!message) throw new Error('message is required');\n  return signMessage({\n    message\n  });\n};\n\nfunction useSignMessage() {\n  let {\n    message,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$6({\n    message\n  }), mutationFn$5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage = React.useCallback(args => mutate(args || {\n    message\n  }), [message, mutate]);\n  const signMessageAsync = React.useCallback(args => mutateAsync(args || {\n    message\n  }), [message, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$5 = args => [{\n  entity: 'signTypedData',\n  ...args\n}];\n\nconst mutationFn$4 = args => {\n  const {\n    domain,\n    types,\n    value\n  } = args;\n  if (!domain || !types || !value) throw new Error('domain, types, and value are all required');\n  return signTypedData({\n    domain,\n    types,\n    value\n  });\n};\n\nfunction useSignTypedData() {\n  let {\n    domain,\n    types,\n    value,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$5({\n    domain,\n    types,\n    value\n  }), mutationFn$4, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signTypedData = React.useCallback(args => mutate(args || {\n    domain,\n    types,\n    value\n  }), [domain, types, value, mutate]);\n  const signTypedDataAsync = React.useCallback(args => mutateAsync(args || {\n    domain,\n    types,\n    value\n  }), [domain, types, value, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$4 = args => [{\n  entity: 'switchNetwork',\n  ...args\n}];\n\nconst mutationFn$3 = args => {\n  const {\n    chainId\n  } = args;\n  if (!chainId) throw new Error('chainId is required');\n  return switchNetwork({\n    chainId\n  });\n};\n\nfunction useSwitchNetwork() {\n  var _client$connector, _client$chains;\n\n  let {\n    chainId,\n    throwForSwitchChainNotSupported,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = useClient();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$4({\n    chainId\n  }), mutationFn$3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React.useCallback(chainId_ => mutate({\n    chainId: chainId_ !== null && chainId_ !== void 0 ? chainId_ : chainId\n  }), [chainId, mutate]);\n  const switchNetworkAsync_ = React.useCallback(chainId_ => mutateAsync({\n    chainId: chainId_ !== null && chainId_ !== void 0 ? chainId_ : chainId\n  }), [chainId, mutateAsync]); // Trigger update when connector changes since not all connectors support chain switching\n\n  React.useEffect(() => {\n    const unwatch = client.subscribe(_ref => {\n      let {\n        chains,\n        connector\n      } = _ref;\n      return {\n        chains,\n        connector\n      };\n    }, forceUpdate);\n    return unwatch;\n  }, [client, forceUpdate]);\n  let switchNetwork;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!((_client$connector = client.connector) !== null && _client$connector !== void 0 && _client$connector.switchChain);\n\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n\n  return {\n    chains: (_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables === null || variables === void 0 ? void 0 : variables.chainId,\n    reset,\n    status,\n    switchNetwork,\n    switchNetworkAsync,\n    variables\n  };\n}\n\nconst useContract = _ref => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return React.useMemo(() => {\n    return getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n  }, [addressOrName, contractInterface, signerOrProvider]);\n};\n\nconst useContractEvent = _ref => {\n  var _ref2;\n\n  let {\n    addressOrName,\n    chainId,\n    contractInterface,\n    listener,\n    eventName,\n    signerOrProvider,\n    once\n  } = _ref;\n  const provider = useProvider({\n    chainId\n  });\n  const webSocketProvider = useWebSocketProvider({\n    chainId\n  });\n  const contract = useContract({\n    addressOrName,\n    contractInterface,\n    signerOrProvider: (_ref2 = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider) !== null && _ref2 !== void 0 ? _ref2 : signerOrProvider\n  });\n  const listenerRef = React.useRef(listener);\n  listenerRef.current = listener;\n  React.useEffect(() => {\n    const handler = function () {\n      for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n        event[_key] = arguments[_key];\n      }\n\n      return listenerRef.current(event);\n    };\n\n    const contract_ = contract;\n    if (once) contract_.once(eventName, handler);else contract_.on(eventName, handler);\n    return () => {\n      contract_.off(eventName, handler);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contract, eventName]);\n};\n\nconst paginatedIndexesConfig = (fn, _ref) => {\n  let {\n    perPage,\n    start,\n    direction\n  } = _ref;\n  return {\n    getNextPageParam: (lastPage, pages) => (lastPage === null || lastPage === void 0 ? void 0 : lastPage.length) === perPage ? pages.length : undefined,\n    contracts: function () {\n      let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return [...Array(perPage).keys()].map(index => {\n        return direction === 'increment' ? start + index + page * perPage : start - index - page * perPage;\n      }).filter(index => index >= 0).map(fn);\n    }\n  };\n};\n\nconst queryKey$b = _ref2 => {\n  let [{\n    cacheKey,\n    overrides\n  }] = _ref2;\n  return [{\n    entity: 'readContractsInfinite',\n    cacheKey,\n    overrides\n  }];\n};\n\nconst queryFn$b = _ref3 => {\n  let {\n    contracts\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        overrides\n      }],\n      pageParam\n    } = _ref4;\n    return readContracts({\n      contracts: contracts(pageParam || undefined),\n      overrides\n    });\n  };\n};\n\nfunction useContractInfiniteReads(_ref5) {\n  let {\n    cacheKey,\n    cacheTime,\n    contracts,\n    enabled: enabled_ = true,\n    getNextPageParam,\n    isDataEqual = deepEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    overrides,\n    select,\n    staleTime,\n    suspense\n  } = _ref5;\n  const queryKey_ = React.useMemo(() => queryKey$b([{\n    cacheKey,\n    overrides\n  }]), [cacheKey, overrides]);\n  const enabled = React.useMemo(() => {\n    const enabled = Boolean(enabled_ && contracts);\n    return enabled;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn$b({\n    contracts\n  }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$a = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    functionName,\n    overrides\n  }, {\n    blockNumber\n  }] = _ref;\n  return [{\n    entity: 'readContract',\n    addressOrName,\n    args,\n    blockNumber,\n    chainId,\n    functionName,\n    overrides\n  }];\n};\n\nconst queryFn$a = _ref2 => {\n  let {\n    contractInterface\n  } = _ref2;\n  return async _ref3 => {\n    var _await$readContract;\n\n    let {\n      queryKey: [{\n        addressOrName,\n        args,\n        chainId,\n        functionName,\n        overrides\n      }]\n    } = _ref3;\n    return (_await$readContract = await readContract({\n      addressOrName,\n      args,\n      chainId,\n      contractInterface,\n      functionName,\n      overrides\n    })) !== null && _await$readContract !== void 0 ? _await$readContract : null;\n  };\n};\n\nfunction useContractRead(_ref4) {\n  let {\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    chainId: chainId_,\n    overrides,\n    cacheOnBlock = false,\n    cacheTime,\n    enabled: enabled_ = true,\n    isDataEqual = deepEqual,\n    select,\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref4;\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const queryKey_ = React.useMemo(() => queryKey$a([{\n    addressOrName,\n    args,\n    chainId,\n    functionName,\n    overrides\n  }, {\n    blockNumber: cacheOnBlock ? blockNumber : undefined\n  }]), [addressOrName, args, blockNumber, cacheOnBlock, chainId, functionName, overrides]);\n  const enabled = React.useMemo(() => {\n    let enabled = Boolean(enabled_ && addressOrName && functionName);\n    if (cacheOnBlock) enabled = Boolean(enabled && blockNumber);\n    return enabled;\n  }, [addressOrName, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: watch && !cacheOnBlock,\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn$a({\n    contractInterface\n  }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    select: data => {\n      const result = parseContractResult({\n        contractInterface,\n        data,\n        functionName\n      });\n      return select ? select(result) : result;\n    },\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$9 = _ref => {\n  let [{\n    allowFailure,\n    contracts,\n    overrides\n  }, {\n    blockNumber,\n    chainId\n  }] = _ref;\n  return [{\n    entity: 'readContracts',\n    allowFailure,\n    blockNumber,\n    chainId,\n    contracts: contracts.map(_ref2 => {\n      let {\n        addressOrName,\n        args,\n        chainId,\n        functionName\n      } = _ref2;\n      return {\n        addressOrName,\n        args,\n        chainId,\n        functionName\n      };\n    }),\n    overrides\n  }];\n};\n\nconst queryFn$9 = _ref3 => {\n  let {\n    contractInterfaces\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        allowFailure,\n        contracts: contracts_,\n        overrides\n      }]\n    } = _ref4;\n    const contracts = contracts_.map((contract, i) => ({ ...contract,\n      contractInterface: contractInterfaces[i]\n    }));\n    return readContracts({\n      allowFailure,\n      contracts,\n      overrides\n    });\n  };\n};\n\nfunction useContractReads(_ref5) {\n  let {\n    allowFailure = true,\n    cacheOnBlock = false,\n    cacheTime,\n    contracts,\n    overrides,\n    enabled: enabled_ = true,\n    isDataEqual = deepEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    select,\n    staleTime,\n    suspense,\n    watch\n  } = _ref5;\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const queryKey_ = React.useMemo(() => queryKey$9([{\n    allowFailure,\n    contracts,\n    overrides\n  }, {\n    blockNumber: cacheOnBlock ? blockNumber : undefined,\n    chainId\n  }]), [allowFailure, blockNumber, cacheOnBlock, chainId, contracts, overrides]);\n  const contractInterfaces = contracts.map(_ref6 => {\n    let {\n      contractInterface\n    } = _ref6;\n    return contractInterface;\n  });\n  const enabled = React.useMemo(() => {\n    let enabled = Boolean(enabled_ && contracts.length > 0);\n    if (cacheOnBlock) enabled = Boolean(enabled && blockNumber);\n    return enabled;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: watch && !cacheOnBlock,\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn$9({\n    contractInterfaces\n  }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select: data => {\n      const result = data.map((data, i) => {\n        var _contracts$i, _contracts$i2;\n\n        return contracts[i] ? parseContractResult({\n          contractInterface: (_contracts$i = contracts[i]) === null || _contracts$i === void 0 ? void 0 : _contracts$i.contractInterface,\n          functionName: (_contracts$i2 = contracts[i]) === null || _contracts$i2 === void 0 ? void 0 : _contracts$i2.functionName,\n          data\n        }) : data;\n      });\n      return select ? select(result) : result;\n    },\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst mutationKey$3 = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    request\n  }] = _ref;\n  return [{\n    entity: 'writeContract',\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    request\n  }];\n};\n\nconst mutationFn$2 = _ref2 => {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    mode,\n    overrides,\n    request\n  } = _ref2;\n  return writeContract({\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    mode,\n    overrides,\n    request\n  });\n};\n/**\n * @description Hook for calling an ethers Contract [write](https://docs.ethers.io/v5/api/contract/contract/#Contract--write)\n * method.\n *\n * It is highly recommended to pair this with the [`usePrepareContractWrite` hook](/docs/prepare-hooks/usePrepareContractWrite)\n * to [avoid UX pitfalls](https://wagmi.sh/docs/prepare-hooks/intro#ux-pitfalls-without-prepare-hooks).\n *\n * @example\n * import { useContractWrite, usePrepareContractWrite } from 'wagmi'\n *\n * const { config } = usePrepareContractWrite({\n *  addressOrName: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',\n *  contractInterface: wagmigotchiABI,\n *  functionName: 'feed',\n * })\n * const { data, isLoading, isSuccess, write } = useContractWrite(config)\n *\n */\n\n\nfunction useContractWrite(_ref3) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    mode,\n    overrides,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref3;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$3([{\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    chainId,\n    mode,\n    overrides,\n    request\n  }]), mutationFn$2, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const write = React.useCallback(overrideConfig => {\n    var _overrideConfig$reckl, _overrideConfig$reckl2;\n\n    return mutate({\n      addressOrName,\n      args: (_overrideConfig$reckl = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedArgs) !== null && _overrideConfig$reckl !== void 0 ? _overrideConfig$reckl : args,\n      chainId,\n      contractInterface,\n      functionName,\n      mode: overrideConfig ? 'recklesslyUnprepared' : mode,\n      overrides: (_overrideConfig$reckl2 = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedOverrides) !== null && _overrideConfig$reckl2 !== void 0 ? _overrideConfig$reckl2 : overrides,\n      request\n    });\n  }, [addressOrName, args, chainId, contractInterface, functionName, mode, mutate, overrides, request]);\n  const writeAsync = React.useCallback(overrideConfig => {\n    var _overrideConfig$reckl3, _overrideConfig$reckl4;\n\n    return mutateAsync({\n      addressOrName,\n      args: (_overrideConfig$reckl3 = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedArgs) !== null && _overrideConfig$reckl3 !== void 0 ? _overrideConfig$reckl3 : args,\n      chainId,\n      contractInterface,\n      functionName,\n      mode: overrideConfig ? 'recklesslyUnprepared' : mode,\n      overrides: (_overrideConfig$reckl4 = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedOverrides) !== null && _overrideConfig$reckl4 !== void 0 ? _overrideConfig$reckl4 : overrides,\n      request\n    });\n  }, [addressOrName, args, chainId, contractInterface, functionName, mode, mutateAsync, overrides, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write: mode === 'prepared' && !request ? undefined : write,\n    writeAsync: mode === 'prepared' && !request ? undefined : writeAsync\n  };\n}\n\nconst mutationKey$2 = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    overrides\n  }] = _ref;\n  return [{\n    entity: 'writeContract',\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    overrides\n  }];\n};\n/** @deprecated */\n\n\nfunction useDeprecatedContractWrite(_ref2) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    signerOrProvider,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref2;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$2([{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  }]), _ref3 => {\n    let {\n      args,\n      overrides\n    } = _ref3;\n    return deprecatedWriteContract({\n      addressOrName,\n      args,\n      chainId,\n      contractInterface,\n      functionName,\n      overrides,\n      signerOrProvider\n    });\n  }, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const write = React.useCallback(overrideConfig => mutate({\n    addressOrName,\n    chainId,\n    contractInterface,\n    functionName,\n    signerOrProvider,\n    ...(overrideConfig || {\n      args,\n      overrides\n    })\n  }), [addressOrName, args, chainId, contractInterface, functionName, mutate, overrides, signerOrProvider]);\n  const writeAsync = React.useCallback(overrideConfig => mutateAsync({\n    addressOrName,\n    chainId,\n    contractInterface,\n    functionName,\n    signerOrProvider,\n    ...(overrideConfig || {\n      args,\n      overrides\n    })\n  }), [addressOrName, args, chainId, contractInterface, functionName, mutateAsync, overrides, signerOrProvider]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\nconst queryKey$8 = (_ref, _ref2) => {\n  let {\n    args,\n    addressOrName,\n    functionName,\n    overrides\n  } = _ref;\n  let {\n    chainId,\n    signerAddress\n  } = _ref2;\n  return [{\n    entity: 'prepareContractTransaction',\n    addressOrName,\n    args,\n    chainId,\n    functionName,\n    overrides,\n    signerAddress\n  }];\n};\n\nconst queryFn$8 = _ref3 => {\n  let {\n    contractInterface,\n    signer\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        args,\n        addressOrName,\n        functionName,\n        overrides\n      }]\n    } = _ref4;\n    return prepareWriteContract({\n      args,\n      addressOrName,\n      contractInterface,\n      functionName,\n      overrides,\n      signer\n    });\n  };\n};\n/**\n * @description Hook for preparing a contract write to be sent via [`useContractWrite`](/docs/hooks/useContractWrite).\n *\n * Eagerly fetches the parameters required for sending a contract write transaction such as the gas estimate.\n *\n * @example\n * import { useContractWrite, usePrepareContractWrite } from 'wagmi'\n *\n * const { config } = usePrepareContractWrite({\n *  addressOrName: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',\n *  contractInterface: wagmigotchiABI,\n *  functionName: 'feed',\n * })\n * const { data, isLoading, isSuccess, write } = useContractWrite(config)\n *\n */\n\n\nfunction usePrepareContractWrite(_ref5) {\n  let {\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    overrides,\n    cacheTime,\n    enabled = true,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref5;\n  const chainId = useChainId();\n  const {\n    data: signer\n  } = useSigner();\n  const prepareContractWriteQuery = useQuery(queryKey$8({\n    addressOrName,\n    functionName,\n    args,\n    overrides\n  }, {\n    chainId,\n    signerAddress: signer === null || signer === void 0 ? void 0 : signer._address\n  }), queryFn$8({\n    contractInterface,\n    signer\n  }), {\n    cacheTime,\n    enabled: Boolean(enabled && signer),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      addressOrName,\n      args,\n      contractInterface,\n      overrides,\n      functionName,\n      request: undefined,\n      mode: 'prepared',\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\nconst queryKey$7 = _ref => {\n  let {\n    address,\n    chainId,\n    formatUnits\n  } = _ref;\n  return [{\n    entity: 'token',\n    address,\n    chainId,\n    formatUnits\n  }];\n};\n\nconst queryFn$7 = _ref2 => {\n  let {\n    queryKey: [{\n      address,\n      chainId,\n      formatUnits\n    }]\n  } = _ref2;\n  if (!address) throw new Error('address is required');\n  return fetchToken({\n    address,\n    chainId,\n    formatUnits\n  });\n};\n\nfunction useToken() {\n  let {\n    address,\n    chainId: chainId_,\n    formatUnits = 'ether',\n    cacheTime,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$7({\n    address,\n    chainId,\n    formatUnits\n  }), queryFn$7, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$6 = _ref => {\n  let {\n    chainId,\n    name\n  } = _ref;\n  return [{\n    entity: 'ensAddress',\n    chainId,\n    name\n  }];\n};\n\nconst queryFn$6 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref2;\n  if (!name) throw new Error('name is required');\n  return fetchEnsAddress({\n    chainId,\n    name\n  });\n};\n\nfunction useEnsAddress() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$6({\n    chainId,\n    name\n  }), queryFn$6, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$5 = _ref => {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  return [{\n    entity: 'ensAvatar',\n    addressOrName,\n    chainId\n  }];\n};\n\nconst queryFn$5 = _ref2 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      chainId\n    }]\n  } = _ref2;\n  if (!addressOrName) throw new Error('addressOrName is required');\n  return fetchEnsAvatar({\n    addressOrName,\n    chainId\n  });\n};\n\nfunction useEnsAvatar() {\n  let {\n    addressOrName,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$5({\n    addressOrName,\n    chainId\n  }), queryFn$5, {\n    cacheTime,\n    enabled: Boolean(enabled && addressOrName && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$4 = _ref => {\n  let {\n    address,\n    chainId\n  } = _ref;\n  return [{\n    entity: 'ensName',\n    address,\n    chainId\n  }];\n};\n\nconst queryFn$4 = _ref2 => {\n  let {\n    queryKey: [{\n      address,\n      chainId\n    }]\n  } = _ref2;\n  if (!address) throw new Error('address is required');\n  return fetchEnsName({\n    address,\n    chainId\n  });\n};\n\nfunction useEnsName() {\n  let {\n    address,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$4({\n    address,\n    chainId\n  }), queryFn$4, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$3 = _ref => {\n  let {\n    chainId,\n    name\n  } = _ref;\n  return [{\n    entity: 'ensResolver',\n    chainId,\n    name\n  }];\n};\n\nconst queryFn$3 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref2;\n  if (!name) throw new Error('name is required');\n  return fetchEnsResolver({\n    chainId,\n    name\n  });\n};\n\nfunction useEnsResolver() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$3({\n    chainId,\n    name\n  }), queryFn$3, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst mutationKey$1 = args => [{\n  entity: 'sendTransaction',\n  ...args\n}];\n\nconst mutationFn$1 = args => {\n  const {\n    chainId,\n    request\n  } = args;\n  if (!request) throw new Error('request is required');\n  return deprecatedSendTransaction({\n    chainId,\n    request\n  });\n};\n/** @deprecated */\n\n\nfunction useDeprecatedSendTransaction() {\n  let {\n    chainId,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$1({\n    chainId,\n    request\n  }), mutationFn$1, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sendTransaction = React.useCallback(args => mutate({\n    chainId,\n    request,\n    ...(args !== null && args !== void 0 ? args : {})\n  }), [chainId, mutate, request]);\n  const sendTransactionAsync = React.useCallback(args => mutateAsync({\n    chainId,\n    request,\n    ...(args !== null && args !== void 0 ? args : {})\n  }), [chainId, mutateAsync, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction,\n    sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\nconst queryKey$2 = _ref => {\n  let {\n    chainId,\n    request\n  } = _ref;\n  return [{\n    entity: 'prepareSendTransaction',\n    chainId,\n    request\n  }];\n};\n\nconst queryFn$2 = _ref2 => {\n  let {\n    queryKey: [{\n      request\n    }]\n  } = _ref2;\n  if (!request.to) throw new Error('request.to is required');\n  return prepareSendTransaction({\n    request: { ...request,\n      to: request.to\n    }\n  });\n};\n/**\n * @description Hook for preparing a transaction to be sent via [`useSendTransaction`](/docs/hooks/useSendTransaction).\n *\n * Eagerly fetches the parameters required for sending a transaction such as the gas estimate and resolving an ENS address (if required).\n *\n * @example\n * import { useSendTransaction, usePrepareSendTransaction } from 'wagmi'\n *\n * const config = usePrepareSendTransaction({\n *   to: 'moxey.eth',\n *   value: parseEther('1'),\n * })\n * const result = useSendTransaction(config)\n */\n\n\nfunction usePrepareSendTransaction(_ref3) {\n  let {\n    request,\n    cacheTime,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref3;\n  const chainId = useChainId();\n  const provider = useProvider();\n  const prepareSendTransactionQuery = useQuery(queryKey$2({\n    request,\n    chainId\n  }), queryFn$2, {\n    cacheTime,\n    enabled: Boolean(enabled && provider && request.to),\n    isDataEqual: deepEqual,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      request: undefined,\n      mode: 'prepared',\n      ...prepareSendTransactionQuery.data\n    }\n  });\n}\n\nconst mutationKey = args => [{\n  entity: 'sendTransaction',\n  ...args\n}];\n\nconst mutationFn = _ref => {\n  let {\n    chainId,\n    mode,\n    request\n  } = _ref;\n  return sendTransaction({\n    chainId,\n    mode,\n    request\n  });\n};\n/**\n * @description Hook for sending a transaction.\n *\n * It is recommended to pair this with the [`usePrepareSendTransaction` hook](/docs/prepare-hooks/usePrepareSendTransaction)\n * to [avoid UX pitfalls](https://wagmi.sh/docs/prepare-hooks/intro#ux-pitfalls-without-prepare-hooks).\n *\n * @example\n * import { useSendTransaction, usePrepareSendTransaction } from 'wagmi'\n *\n * const config = usePrepareSendTransaction({\n *   request: {\n *     to: 'moxey.eth',\n *     value: parseEther('1'),\n *   }\n * })\n * const result = useSendTransaction(config)\n */\n\n\nfunction useSendTransaction(_ref2) {\n  let {\n    chainId,\n    mode,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref2;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({\n    chainId,\n    mode,\n    request\n  }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sendTransaction = React.useCallback(args => {\n    var _args$recklesslySetUn;\n\n    return mutate({\n      chainId,\n      mode,\n      request: (_args$recklesslySetUn = args === null || args === void 0 ? void 0 : args.recklesslySetUnpreparedRequest) !== null && _args$recklesslySetUn !== void 0 ? _args$recklesslySetUn : request\n    });\n  }, [chainId, mode, mutate, request]);\n  const sendTransactionAsync = React.useCallback(args => {\n    var _args$recklesslySetUn2;\n\n    return mutateAsync({\n      chainId,\n      mode,\n      request: (_args$recklesslySetUn2 = args === null || args === void 0 ? void 0 : args.recklesslySetUnpreparedRequest) !== null && _args$recklesslySetUn2 !== void 0 ? _args$recklesslySetUn2 : request\n    });\n  }, [chainId, mode, mutateAsync, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === 'prepared' && !request ? undefined : sendTransaction,\n    sendTransactionAsync: mode === 'prepared' && !request ? undefined : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\nconst queryKey$1 = _ref => {\n  let {\n    chainId,\n    hash\n  } = _ref;\n  return [{\n    entity: 'transaction',\n    chainId,\n    hash\n  }];\n};\n\nconst queryFn$1 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      hash\n    }]\n  } = _ref2;\n  if (!hash) throw new Error('hash is required');\n  return fetchTransaction({\n    chainId,\n    hash\n  });\n};\n/**\n * @description Fetches transaction for hash\n *\n * @example\n * import { useTransaction } from 'wagmi'\n *\n * const result = useTransaction({\n *  chainId: 1,\n *  hash: '0x...',\n * })\n */\n\n\nfunction useTransaction() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    hash,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$1({\n    chainId,\n    hash\n  }), queryFn$1, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey = _ref => {\n  let {\n    confirmations,\n    chainId,\n    hash,\n    timeout,\n    wait\n  } = _ref;\n  return [{\n    entity: 'waitForTransaction',\n    confirmations,\n    chainId,\n    hash,\n    timeout,\n    wait\n  }];\n};\n\nconst queryFn = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      confirmations,\n      hash,\n      timeout,\n      wait\n    }]\n  } = _ref2;\n  return waitForTransaction({\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait\n  });\n};\n\nfunction useWaitForTransaction() {\n  let {\n    chainId: chainId_,\n    confirmations,\n    hash,\n    timeout,\n    wait,\n    cacheTime,\n    enabled = true,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey({\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait\n  }), queryFn, {\n    cacheTime,\n    enabled: Boolean(enabled && (hash || wait)),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nexport { Context, WagmiConfig, createClient, deserialize, paginatedIndexesConfig, serialize, useAccount, useBalance, useBlockNumber, useClient, useConnect, useContract, useContractEvent, useContractInfiniteReads, useContractRead, useContractReads, useContractWrite, useDeprecatedContractWrite, useDeprecatedSendTransaction, useDisconnect, useEnsAddress, useEnsAvatar, useEnsName, useEnsResolver, useFeeData, useInfiniteQuery, useNetwork, usePrepareContractWrite, usePrepareSendTransaction, useProvider, useQuery, useSendTransaction, useSignMessage, useSignTypedData, useSigner, useSwitchNetwork, useToken, useTransaction, useWaitForTransaction, useWebSocketProvider };","map":{"version":3,"names":["createSyncStoragePersister","useQueryClient","useIsRestoring","useQueryErrorResetBoundary","notifyManager","InfiniteQueryObserver","QueryObserver","QueryClient","QueryClientProvider","useMutation","persistQueryClient","watchProvider","getProvider","watchWebSocketProvider","getWebSocketProvider","fetchBlockNumber","fetchFeeData","deepEqual","watchSigner","fetchSigner","createClient","createClient$1","getAccount","watchAccount","fetchBalance","connect","disconnect","getNetwork","watchNetwork","signMessage","signTypedData","switchNetwork","getContract","readContracts","parseContractResult","readContract","writeContract","deprecatedWriteContract","prepareWriteContract","fetchToken","fetchEnsAddress","fetchEnsAvatar","fetchEnsName","fetchEnsResolver","deprecatedSendTransaction","prepareSendTransaction","sendTransaction","fetchTransaction","waitForTransaction","AddChainError","ChainDoesNotSupportMulticallError","ChainMismatchError","ChainNotConfiguredError","Client","Connector","ConnectorAlreadyConnectedError","ConnectorNotFoundError","ContractMethodDoesNotExistError","ContractMethodNoResultError","ContractMethodRevertedError","ContractResultDecodeError","ProviderChainsNotFound","ProviderRpcError","ResourceUnavailableError","RpcError","SwitchChainError","SwitchChainNotSupportedError","UserRejectedRequestError","alchemyRpcUrls","allChains","chain","chainId","configureChains","createStorage","defaultChains","defaultL2Chains","erc20ABI","erc721ABI","etherscanBlockExplorers","infuraRpcUrls","publicRpcUrls","React","pkg","BigNumber","useSyncExternalStoreWithSelector","debounce","useSyncExternalStore","isQueryKey","value","Array","isArray","parseQueryArgs","arg1","arg2","arg3","queryKey","queryFn","shouldThrowError","_useErrorBoundary","params","trackResult","result","observer","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","trackedProps","add","useBaseQuery","options","Observer","queryClient","context","isRestoring","errorResetBoundary","defaultedOptions","defaultQueryOptions","_optimisticResults","onError","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","isReset","retryOnMount","useState","getOptimisticResult","useCallback","onStoreChange","undefined","subscribe","getCurrentResult","useEffect","clearReset","setOptions","listeners","isLoading","isFetching","fetchOptimistic","then","_ref","_defaultedOptions$onS","_defaultedOptions$onS2","data","call","catch","error","_defaultedOptions$onE","_defaultedOptions$onS3","isError","getCurrentQuery","status","fetchStatus","isIdle","useInfiniteQuery","parsedOptions","baseQuery","fetchNextPage","hasNextPage","isFetched","isFetchingNextPage","isRefetching","isSuccess","refetch","internal","dataUpdatedAt","errorUpdatedAt","failureCount","isFetchedAfterMount","isLoadingError","isPaused","isPlaceholderData","isPreviousData","isRefetchError","isStale","remove","notifyOnChangeProps","useQuery","useProvider","arguments","length","cb","x","a","b","network","useWebSocketProvider","useChainId","provider","useForceUpdate","forceUpdate","useReducer","queryKey$f","entity","queryFn$f","_ref2","useBlockNumber","cacheTime","chainId_","enabled","watch","onBlock","webSocketProvider","listener","blockNumber","setQueryData","provider_","on","off","queryKey$e","formatUnits","queryFn$e","useFeeData","feeDataQuery","useInvalidateOnBlock","invalidateQueries","isPlainObject","obj","useSyncExternalStoreWithTracked","getSnapshot","getServerSnapshot","isEqual","trackedKeys","useRef","current","equal","defineProperties","entries","reduce","res","includes","push","queryKey$d","queryFn$d","useSigner","signerQuery","unwatch","signer","findAndReplace","cacheRef","find","replace","map","item","curr","deserialize","cachedString","cache","JSON","parse","deserializedCacheWithBigNumbers","type","from","hex","getReferenceKey","cutoff","slice","join","getCutoff","array","index","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","splice","valueCutoff","concat","serialize","indent","stringify","defaultOptions","queries","networkMode","refetchOnWindowFocus","retry","mutations","persister","window","storage","localStorage","config","client","dehydrateOptions","shouldDehydrateQuery","query","queryHash","assign","Context","createContext","WagmiConfig","children","createElement","Provider","useClient","useContext","Error","useAccount","onConnect","onDisconnect","account","unsubscribe","state","prevStatus","address","connector","isReconnected","queryKey$c","addressOrName","token","queryFn$c","useBalance","balanceQuery","Boolean","mutationKey$8","args","mutationFn$7","useConnect","onMutate","mutate","mutateAsync","reset","variables","_args$chainId","_args$connector","connectAsync","_args$chainId2","_args$connector2","connectors","pendingConnector","mutationKey$7","mutationFn$6","useDisconnect","disconnectAsync","_variables","_data","useNetwork","mutationKey$6","mutationFn$5","message","useSignMessage","signMessageAsync","mutationKey$5","mutationFn$4","domain","types","useSignTypedData","signTypedDataAsync","mutationKey$4","mutationFn$3","useSwitchNetwork","_client$connector","_client$chains","throwForSwitchChainNotSupported","switchNetwork_","switchNetworkAsync_","chains","switchNetworkAsync","supportsSwitchChain","switchChain","pendingChainId","useContract","contractInterface","signerOrProvider","useMemo","useContractEvent","eventName","once","contract","listenerRef","handler","_len","event","_key","contract_","paginatedIndexesConfig","fn","perPage","start","direction","getNextPageParam","lastPage","pages","contracts","page","filter","queryKey$b","cacheKey","overrides","queryFn$b","_ref3","_ref4","pageParam","useContractInfiniteReads","_ref5","enabled_","isDataEqual","keepPreviousData","select","queryKey_","queryKey$a","functionName","queryFn$a","_await$readContract","useContractRead","cacheOnBlock","queryKey$9","allowFailure","queryFn$9","contractInterfaces","contracts_","i","useContractReads","_ref6","_contracts$i","_contracts$i2","mutationKey$3","request","mutationFn$2","mode","useContractWrite","write","overrideConfig","_overrideConfig$reckl","_overrideConfig$reckl2","recklesslySetUnpreparedArgs","recklesslySetUnpreparedOverrides","writeAsync","_overrideConfig$reckl3","_overrideConfig$reckl4","mutationKey$2","useDeprecatedContractWrite","queryKey$8","signerAddress","queryFn$8","usePrepareContractWrite","prepareContractWriteQuery","_address","queryKey$7","queryFn$7","useToken","queryKey$6","name","queryFn$6","useEnsAddress","queryKey$5","queryFn$5","useEnsAvatar","queryKey$4","queryFn$4","useEnsName","queryKey$3","queryFn$3","useEnsResolver","mutationKey$1","mutationFn$1","useDeprecatedSendTransaction","sendTransactionAsync","queryKey$2","queryFn$2","to","usePrepareSendTransaction","prepareSendTransactionQuery","mutationKey","mutationFn","useSendTransaction","_args$recklesslySetUn","recklesslySetUnpreparedRequest","_args$recklesslySetUn2","queryKey$1","hash","queryFn$1","useTransaction","confirmations","timeout","wait","useWaitForTransaction"],"sources":["C:/Users/danie/OneDrive/Desktop/work on this/node_modules/wagmi/dist/wagmi.esm.js"],"sourcesContent":["import { createSyncStoragePersister } from '@tanstack/query-sync-storage-persister';\nimport { useQueryClient, useIsRestoring, useQueryErrorResetBoundary, notifyManager, InfiniteQueryObserver, QueryObserver, QueryClient, QueryClientProvider, useMutation } from '@tanstack/react-query';\nimport { persistQueryClient } from '@tanstack/react-query-persist-client';\nimport { watchProvider, getProvider, watchWebSocketProvider, getWebSocketProvider, fetchBlockNumber, fetchFeeData, deepEqual, watchSigner, fetchSigner, createClient as createClient$1, getAccount, watchAccount, fetchBalance, connect, disconnect, getNetwork, watchNetwork, signMessage, signTypedData, switchNetwork, getContract, readContracts, parseContractResult, readContract, writeContract, deprecatedWriteContract, prepareWriteContract, fetchToken, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, deprecatedSendTransaction, prepareSendTransaction, sendTransaction, fetchTransaction, waitForTransaction } from '@wagmi/core';\nexport { AddChainError, ChainDoesNotSupportMulticallError, ChainMismatchError, ChainNotConfiguredError, Client, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ContractMethodDoesNotExistError, ContractMethodNoResultError, ContractMethodRevertedError, ContractResultDecodeError, ProviderChainsNotFound, ProviderRpcError, ResourceUnavailableError, RpcError, SwitchChainError, SwitchChainNotSupportedError, UserRejectedRequestError, alchemyRpcUrls, allChains, chain, chainId, configureChains, createStorage, deepEqual, defaultChains, defaultL2Chains, erc20ABI, erc721ABI, etherscanBlockExplorers, infuraRpcUrls, publicRpcUrls, readContracts } from '@wagmi/core';\nimport * as React from 'react';\nimport * as pkg from 'use-sync-external-store/shim/index.js';\nimport { BigNumber } from 'ethers/lib/ethers';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\nimport { debounce } from '@wagmi/core/internal';\n\nconst useSyncExternalStore = pkg.useSyncExternalStore;\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\n\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach(key => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        // @ts-expect-error â€“ aware we are mutating private `trackedProps` property.\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(_ref => {\n      var _defaultedOptions$onS, _defaultedOptions$onS2;\n\n      let {\n        data\n      } = _ref;\n      (_defaultedOptions$onS = defaultedOptions.onSuccess) === null || _defaultedOptions$onS === void 0 ? void 0 : _defaultedOptions$onS.call(defaultedOptions, data);\n      (_defaultedOptions$onS2 = defaultedOptions.onSettled) === null || _defaultedOptions$onS2 === void 0 ? void 0 : _defaultedOptions$onS2.call(defaultedOptions, data, null);\n    }).catch(error => {\n      var _defaultedOptions$onE, _defaultedOptions$onS3;\n\n      errorResetBoundary.clearReset();\n      (_defaultedOptions$onE = defaultedOptions.onError) === null || _defaultedOptions$onE === void 0 ? void 0 : _defaultedOptions$onE.call(defaultedOptions, error);\n      (_defaultedOptions$onS3 = defaultedOptions.onSettled) === null || _defaultedOptions$onS3 === void 0 ? void 0 : _defaultedOptions$onS3.call(defaultedOptions, undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  }\n\n  const status = result.status === 'loading' && result.fetchStatus === 'idle' ? 'idle' : result.status;\n  const isIdle = status === 'idle';\n  const isLoading = status === 'loading' && result.fetchStatus === 'fetching';\n  return { ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(parsedOptions, InfiniteQueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  }; // Handle result property usage tracking\n\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(parsedOptions, QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  }; // Handle result property usage tracking\n\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\nfunction useProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useSyncExternalStoreWithSelector(cb => watchProvider({\n    chainId\n  }, cb), () => getProvider({\n    chainId\n  }), () => getProvider({\n    chainId\n  }), x => x, (a, b) => a.network.chainId === b.network.chainId);\n}\n\nfunction useWebSocketProvider() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useSyncExternalStoreWithSelector(cb => watchWebSocketProvider({\n    chainId\n  }, cb), () => getWebSocketProvider({\n    chainId\n  }), () => getWebSocketProvider({\n    chainId\n  }), x => x, (a, b) => (a === null || a === void 0 ? void 0 : a.network.chainId) === (b === null || b === void 0 ? void 0 : b.network.chainId));\n}\n\nfunction useChainId() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const provider = useProvider({\n    chainId\n  });\n  return provider.network.chainId;\n}\n\nfunction useForceUpdate() {\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\n\nconst queryKey$f = _ref => {\n  let {\n    chainId\n  } = _ref;\n  return [{\n    entity: 'blockNumber',\n    chainId\n  }];\n};\n\nconst queryFn$f = _ref2 => {\n  let {\n    queryKey: [{\n      chainId\n    }]\n  } = _ref2;\n  return fetchBlockNumber({\n    chainId\n  });\n};\n\nfunction useBlockNumber() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    staleTime,\n    suspense,\n    watch = false,\n    onBlock,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const provider = useProvider({\n    chainId\n  });\n  const webSocketProvider = useWebSocketProvider({\n    chainId\n  });\n  const queryClient = useQueryClient();\n  React.useEffect(() => {\n    if (!watch && !onBlock) return; // We need to debounce the listener as we want to opt-out\n    // of the behavior where ethers emits a \"block\" event for\n    // every block that was missed in between the `pollingInterval`.\n    // We are setting a wait time of 1 as emitting an event in\n    // ethers takes ~0.1ms.\n\n    const listener = debounce(blockNumber => {\n      // Just to be safe in case the provider implementation\n      // calls the event callback after .off() has been called\n      if (watch) queryClient.setQueryData(queryKey$f({\n        chainId\n      }), blockNumber);\n      if (onBlock) onBlock(blockNumber);\n    }, 1);\n    const provider_ = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider;\n    provider_.on('block', listener);\n    return () => {\n      provider_.off('block', listener);\n    };\n  }, [chainId, onBlock, provider, queryClient, watch, webSocketProvider]);\n  return useQuery(queryKey$f({\n    chainId\n  }), queryFn$f, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$e = _ref => {\n  let {\n    chainId,\n    formatUnits\n  } = _ref;\n  return [{\n    entity: 'feeData',\n    chainId,\n    formatUnits\n  }];\n};\n\nconst queryFn$e = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      formatUnits\n    }]\n  } = _ref2;\n  return fetchFeeData({\n    chainId,\n    formatUnits\n  });\n};\n\nfunction useFeeData() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits = 'wei',\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const feeDataQuery = useQuery(queryKey$e({\n    chainId,\n    formatUnits\n  }), queryFn$e, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    chainId,\n    watch\n  });\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!watch) return;\n    if (!blockNumber) return;\n    feeDataQuery.refetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [blockNumber]);\n  return feeDataQuery;\n}\n\nfunction useInvalidateOnBlock(_ref) {\n  let {\n    chainId,\n    enabled,\n    queryKey\n  } = _ref;\n  const queryClient = useQueryClient();\n  useBlockNumber({\n    chainId,\n    onBlock: enabled ? () => queryClient.invalidateQueries(queryKey) : undefined\n  });\n}\n\nconst isPlainObject = obj => typeof obj === 'object' && !Array.isArray(obj);\n\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot) {\n  let getServerSnapshot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getSnapshot;\n  let isEqual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (a, b) => deepEqual(a, b);\n  const trackedKeys = React.useRef([]);\n  const result = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, x => x, (a, b) => {\n    if (isPlainObject(a) && isPlainObject(b)) {\n      for (const key of trackedKeys.current) {\n        const equal = isEqual(a[key], b[key]);\n        if (!equal) return false;\n      }\n\n      return true;\n    }\n\n    return isEqual(a, b);\n  });\n\n  if (isPlainObject(result)) {\n    const trackedResult = { ...result\n    };\n    Object.defineProperties(trackedResult, Object.entries(trackedResult).reduce((res, _ref) => {\n      let [key, value] = _ref;\n      return { ...res,\n        [key]: {\n          configurable: false,\n          enumerable: true,\n          get: () => {\n            if (!trackedKeys.current.includes(key)) {\n              trackedKeys.current.push(key);\n            }\n\n            return value;\n          }\n        }\n      };\n    }, {}));\n    return trackedResult;\n  }\n\n  return result;\n}\n\nconst queryKey$d = () => [{\n  entity: 'signer'\n}];\n\nconst queryFn$d = () => fetchSigner();\n\nfunction useSigner() {\n  let {\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const signerQuery = useQuery(queryKey$d(), queryFn$d, {\n    cacheTime: 0,\n    staleTime: 0,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient();\n  React.useEffect(() => {\n    const unwatch = watchSigner(signer => queryClient.setQueryData(queryKey$d(), signer));\n    return unwatch;\n  }, [queryClient]);\n  return signerQuery;\n}\n\nconst findAndReplace = (cacheRef, _ref) => {\n  let {\n    find,\n    replace\n  } = _ref;\n\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n\n  if (typeof cacheRef !== 'object') {\n    return cacheRef;\n  }\n\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref2) => {\n      let [key, value] = _ref2;\n      return { ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n\n  return cacheRef;\n};\n\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigNumbers = findAndReplace(cache, {\n    find: data => data.type === 'BigNumber',\n    replace: data => BigNumber.from(data.hex)\n  });\n  return deserializedCacheWithBigNumbers;\n}\n\n/**\n * @function getReferenceKey\n *\n * @description\n * get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join('.') || '.';\n}\n/**\n * @function getCutoff\n *\n * @description\n * faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */\n\n\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * @function createReplacer\n *\n * @description\n * create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === 'function';\n  const hasCircularReplacer = typeof circularReplacer === 'function';\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === 'object') {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : \"[ref=\".concat(getReferenceKey(keys, valueCutoff), \"]\");\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\n/**\n * @function stringify\n *\n * @description\n * stringifier that handles circular values\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */\n\n\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent !== null && indent !== void 0 ? indent : undefined);\n}\n\nfunction createClient(_ref) {\n  let {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: {\n          cacheTime: 1000 * 60 * 60 * 24,\n          // 24 hours\n          networkMode: 'offlineFirst',\n          refetchOnWindowFocus: false,\n          retry: 0\n        },\n        mutations: {\n          networkMode: 'offlineFirst'\n        }\n      }\n    }),\n    persister = typeof window !== 'undefined' ? createSyncStoragePersister({\n      key: 'wagmi.cache',\n      storage: window.localStorage,\n      serialize,\n      deserialize\n    }) : undefined,\n    ...config\n  } = _ref;\n  const client = createClient$1(config);\n  if (persister) persistQueryClient({\n    queryClient,\n    persister,\n    dehydrateOptions: {\n      shouldDehydrateQuery: query => query.cacheTime !== 0 && query.queryHash !== JSON.stringify(queryKey$d())\n    }\n  });\n  return Object.assign(client, {\n    queryClient\n  });\n}\n\nconst Context = /*#__PURE__*/React.createContext(undefined);\nfunction WagmiConfig(_ref) {\n  let {\n    children,\n    client\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: client.queryClient\n  }, children));\n}\nfunction useClient() {\n  const client = React.useContext(Context);\n  if (!client) throw new Error(['`useClient` must be used within `WagmiConfig`.\\n', 'Read more: https://wagmi.sh/docs/WagmiConfig'].join('\\n'));\n  return client;\n}\n\nfunction useAccount() {\n  let {\n    onConnect,\n    onDisconnect\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const account = useSyncExternalStoreWithTracked(watchAccount, getAccount);\n  const {\n    subscribe\n  } = useClient();\n  React.useEffect(() => {\n    // No need to subscribe if these callbacks aren't defined\n    if (!onConnect && !onDisconnect) return; // Trigger update when status changes\n\n    const unsubscribe = subscribe(state => state.status, (status, prevStatus) => {\n      if (!!onConnect && status === 'connected') {\n        const {\n          address,\n          connector\n        } = getAccount();\n        onConnect({\n          address,\n          connector,\n          isReconnected: prevStatus === 'reconnecting'\n        });\n      }\n\n      if (!!onDisconnect && prevStatus !== 'connecting' && status === 'disconnected') onDisconnect();\n    });\n    return unsubscribe;\n  }, [onConnect, onDisconnect, subscribe]);\n  return account;\n}\n\nconst queryKey$c = _ref => {\n  let {\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  } = _ref;\n  return [{\n    entity: 'balance',\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  }];\n};\n\nconst queryFn$c = _ref2 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      chainId,\n      formatUnits,\n      token\n    }]\n  } = _ref2;\n  if (!addressOrName) throw new Error('address is required');\n  return fetchBalance({\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  });\n};\n\nfunction useBalance() {\n  let {\n    addressOrName,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits,\n    staleTime,\n    suspense,\n    token,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const balanceQuery = useQuery(queryKey$c({\n    addressOrName,\n    chainId,\n    formatUnits,\n    token\n  }), queryFn$c, {\n    cacheTime,\n    enabled: Boolean(enabled && addressOrName),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    chainId,\n    watch\n  });\n  React.useEffect(() => {\n    if (!enabled) return;\n    if (!watch) return;\n    if (!blockNumber) return;\n    if (!addressOrName) return;\n    balanceQuery.refetch(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [blockNumber]);\n  return balanceQuery;\n}\n\nconst mutationKey$8 = args => [{\n  entity: 'connect',\n  ...args\n}];\n\nconst mutationFn$7 = args => {\n  const {\n    connector,\n    chainId\n  } = args;\n  if (!connector) throw new Error('connector is required');\n  return connect({\n    connector,\n    chainId\n  });\n};\n\nfunction useConnect() {\n  let {\n    chainId,\n    connector,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = useClient();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$8({\n    connector,\n    chainId\n  }), mutationFn$7, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect = React.useCallback(args => {\n    var _args$chainId, _args$connector;\n\n    return mutate({\n      chainId: (_args$chainId = args === null || args === void 0 ? void 0 : args.chainId) !== null && _args$chainId !== void 0 ? _args$chainId : chainId,\n      connector: (_args$connector = args === null || args === void 0 ? void 0 : args.connector) !== null && _args$connector !== void 0 ? _args$connector : connector\n    });\n  }, [chainId, connector, mutate]);\n  const connectAsync = React.useCallback(args => {\n    var _args$chainId2, _args$connector2;\n\n    return mutateAsync({\n      chainId: (_args$chainId2 = args === null || args === void 0 ? void 0 : args.chainId) !== null && _args$chainId2 !== void 0 ? _args$chainId2 : chainId,\n      connector: (_args$connector2 = args === null || args === void 0 ? void 0 : args.connector) !== null && _args$connector2 !== void 0 ? _args$connector2 : connector\n    });\n  }, [chainId, connector, mutateAsync]);\n  return {\n    connect,\n    connectAsync,\n    connectors: client.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables === null || variables === void 0 ? void 0 : variables.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$7 = [{\n  entity: 'disconnect'\n}];\n\nconst mutationFn$6 = () => disconnect();\n\nfunction useDisconnect() {\n  let {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey$7, mutationFn$6, { ...(onError ? {\n      onError(error, _variables, context) {\n        onError(error, context);\n      }\n\n    } : {}),\n    onMutate,\n    ...(onSettled ? {\n      onSettled(_data, error, _variables, context) {\n        onSettled(error, context);\n      }\n\n    } : {}),\n    ...(onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n\n    } : {})\n  });\n  return {\n    disconnect,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\nfunction useNetwork() {\n  return useSyncExternalStoreWithTracked(watchNetwork, getNetwork);\n}\n\nconst mutationKey$6 = args => [{\n  entity: 'signMessage',\n  ...args\n}];\n\nconst mutationFn$5 = args => {\n  const {\n    message\n  } = args;\n  if (!message) throw new Error('message is required');\n  return signMessage({\n    message\n  });\n};\n\nfunction useSignMessage() {\n  let {\n    message,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$6({\n    message\n  }), mutationFn$5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage = React.useCallback(args => mutate(args || {\n    message\n  }), [message, mutate]);\n  const signMessageAsync = React.useCallback(args => mutateAsync(args || {\n    message\n  }), [message, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$5 = args => [{\n  entity: 'signTypedData',\n  ...args\n}];\n\nconst mutationFn$4 = args => {\n  const {\n    domain,\n    types,\n    value\n  } = args;\n  if (!domain || !types || !value) throw new Error('domain, types, and value are all required');\n  return signTypedData({\n    domain,\n    types,\n    value\n  });\n};\n\nfunction useSignTypedData() {\n  let {\n    domain,\n    types,\n    value,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$5({\n    domain,\n    types,\n    value\n  }), mutationFn$4, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signTypedData = React.useCallback(args => mutate(args || {\n    domain,\n    types,\n    value\n  }), [domain, types, value, mutate]);\n  const signTypedDataAsync = React.useCallback(args => mutateAsync(args || {\n    domain,\n    types,\n    value\n  }), [domain, types, value, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\nconst mutationKey$4 = args => [{\n  entity: 'switchNetwork',\n  ...args\n}];\n\nconst mutationFn$3 = args => {\n  const {\n    chainId\n  } = args;\n  if (!chainId) throw new Error('chainId is required');\n  return switchNetwork({\n    chainId\n  });\n};\n\nfunction useSwitchNetwork() {\n  var _client$connector, _client$chains;\n\n  let {\n    chainId,\n    throwForSwitchChainNotSupported,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const client = useClient();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$4({\n    chainId\n  }), mutationFn$3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React.useCallback(chainId_ => mutate({\n    chainId: chainId_ !== null && chainId_ !== void 0 ? chainId_ : chainId\n  }), [chainId, mutate]);\n  const switchNetworkAsync_ = React.useCallback(chainId_ => mutateAsync({\n    chainId: chainId_ !== null && chainId_ !== void 0 ? chainId_ : chainId\n  }), [chainId, mutateAsync]); // Trigger update when connector changes since not all connectors support chain switching\n\n  React.useEffect(() => {\n    const unwatch = client.subscribe(_ref => {\n      let {\n        chains,\n        connector\n      } = _ref;\n      return {\n        chains,\n        connector\n      };\n    }, forceUpdate);\n    return unwatch;\n  }, [client, forceUpdate]);\n  let switchNetwork;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!((_client$connector = client.connector) !== null && _client$connector !== void 0 && _client$connector.switchChain);\n\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n\n  return {\n    chains: (_client$chains = client.chains) !== null && _client$chains !== void 0 ? _client$chains : [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables === null || variables === void 0 ? void 0 : variables.chainId,\n    reset,\n    status,\n    switchNetwork,\n    switchNetworkAsync,\n    variables\n  };\n}\n\nconst useContract = _ref => {\n  let {\n    addressOrName,\n    contractInterface,\n    signerOrProvider\n  } = _ref;\n  return React.useMemo(() => {\n    return getContract({\n      addressOrName,\n      contractInterface,\n      signerOrProvider\n    });\n  }, [addressOrName, contractInterface, signerOrProvider]);\n};\n\nconst useContractEvent = _ref => {\n  var _ref2;\n\n  let {\n    addressOrName,\n    chainId,\n    contractInterface,\n    listener,\n    eventName,\n    signerOrProvider,\n    once\n  } = _ref;\n  const provider = useProvider({\n    chainId\n  });\n  const webSocketProvider = useWebSocketProvider({\n    chainId\n  });\n  const contract = useContract({\n    addressOrName,\n    contractInterface,\n    signerOrProvider: (_ref2 = webSocketProvider !== null && webSocketProvider !== void 0 ? webSocketProvider : provider) !== null && _ref2 !== void 0 ? _ref2 : signerOrProvider\n  });\n  const listenerRef = React.useRef(listener);\n  listenerRef.current = listener;\n  React.useEffect(() => {\n    const handler = function () {\n      for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n        event[_key] = arguments[_key];\n      }\n\n      return listenerRef.current(event);\n    };\n\n    const contract_ = contract;\n    if (once) contract_.once(eventName, handler);else contract_.on(eventName, handler);\n    return () => {\n      contract_.off(eventName, handler);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contract, eventName]);\n};\n\nconst paginatedIndexesConfig = (fn, _ref) => {\n  let {\n    perPage,\n    start,\n    direction\n  } = _ref;\n  return {\n    getNextPageParam: (lastPage, pages) => (lastPage === null || lastPage === void 0 ? void 0 : lastPage.length) === perPage ? pages.length : undefined,\n    contracts: function () {\n      let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      return [...Array(perPage).keys()].map(index => {\n        return direction === 'increment' ? start + index + page * perPage : start - index - page * perPage;\n      }).filter(index => index >= 0).map(fn);\n    }\n  };\n};\nconst queryKey$b = _ref2 => {\n  let [{\n    cacheKey,\n    overrides\n  }] = _ref2;\n  return [{\n    entity: 'readContractsInfinite',\n    cacheKey,\n    overrides\n  }];\n};\n\nconst queryFn$b = _ref3 => {\n  let {\n    contracts\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        overrides\n      }],\n      pageParam\n    } = _ref4;\n    return readContracts({\n      contracts: contracts(pageParam || undefined),\n      overrides\n    });\n  };\n};\n\nfunction useContractInfiniteReads(_ref5) {\n  let {\n    cacheKey,\n    cacheTime,\n    contracts,\n    enabled: enabled_ = true,\n    getNextPageParam,\n    isDataEqual = deepEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    overrides,\n    select,\n    staleTime,\n    suspense\n  } = _ref5;\n  const queryKey_ = React.useMemo(() => queryKey$b([{\n    cacheKey,\n    overrides\n  }]), [cacheKey, overrides]);\n  const enabled = React.useMemo(() => {\n    const enabled = Boolean(enabled_ && contracts);\n    return enabled;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn$b({\n    contracts\n  }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$a = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    functionName,\n    overrides\n  }, {\n    blockNumber\n  }] = _ref;\n  return [{\n    entity: 'readContract',\n    addressOrName,\n    args,\n    blockNumber,\n    chainId,\n    functionName,\n    overrides\n  }];\n};\n\nconst queryFn$a = _ref2 => {\n  let {\n    contractInterface\n  } = _ref2;\n  return async _ref3 => {\n    var _await$readContract;\n\n    let {\n      queryKey: [{\n        addressOrName,\n        args,\n        chainId,\n        functionName,\n        overrides\n      }]\n    } = _ref3;\n    return (_await$readContract = await readContract({\n      addressOrName,\n      args,\n      chainId,\n      contractInterface,\n      functionName,\n      overrides\n    })) !== null && _await$readContract !== void 0 ? _await$readContract : null;\n  };\n};\n\nfunction useContractRead(_ref4) {\n  let {\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    chainId: chainId_,\n    overrides,\n    cacheOnBlock = false,\n    cacheTime,\n    enabled: enabled_ = true,\n    isDataEqual = deepEqual,\n    select,\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref4;\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const queryKey_ = React.useMemo(() => queryKey$a([{\n    addressOrName,\n    args,\n    chainId,\n    functionName,\n    overrides\n  }, {\n    blockNumber: cacheOnBlock ? blockNumber : undefined\n  }]), [addressOrName, args, blockNumber, cacheOnBlock, chainId, functionName, overrides]);\n  const enabled = React.useMemo(() => {\n    let enabled = Boolean(enabled_ && addressOrName && functionName);\n    if (cacheOnBlock) enabled = Boolean(enabled && blockNumber);\n    return enabled;\n  }, [addressOrName, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: watch && !cacheOnBlock,\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn$a({\n    contractInterface\n  }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    select: data => {\n      const result = parseContractResult({\n        contractInterface,\n        data,\n        functionName\n      });\n      return select ? select(result) : result;\n    },\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$9 = _ref => {\n  let [{\n    allowFailure,\n    contracts,\n    overrides\n  }, {\n    blockNumber,\n    chainId\n  }] = _ref;\n  return [{\n    entity: 'readContracts',\n    allowFailure,\n    blockNumber,\n    chainId,\n    contracts: contracts.map(_ref2 => {\n      let {\n        addressOrName,\n        args,\n        chainId,\n        functionName\n      } = _ref2;\n      return {\n        addressOrName,\n        args,\n        chainId,\n        functionName\n      };\n    }),\n    overrides\n  }];\n};\n\nconst queryFn$9 = _ref3 => {\n  let {\n    contractInterfaces\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        allowFailure,\n        contracts: contracts_,\n        overrides\n      }]\n    } = _ref4;\n    const contracts = contracts_.map((contract, i) => ({ ...contract,\n      contractInterface: contractInterfaces[i]\n    }));\n    return readContracts({\n      allowFailure,\n      contracts,\n      overrides\n    });\n  };\n};\n\nfunction useContractReads(_ref5) {\n  let {\n    allowFailure = true,\n    cacheOnBlock = false,\n    cacheTime,\n    contracts,\n    overrides,\n    enabled: enabled_ = true,\n    isDataEqual = deepEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    select,\n    staleTime,\n    suspense,\n    watch\n  } = _ref5;\n  const {\n    data: blockNumber\n  } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const queryKey_ = React.useMemo(() => queryKey$9([{\n    allowFailure,\n    contracts,\n    overrides\n  }, {\n    blockNumber: cacheOnBlock ? blockNumber : undefined,\n    chainId\n  }]), [allowFailure, blockNumber, cacheOnBlock, chainId, contracts, overrides]);\n  const contractInterfaces = contracts.map(_ref6 => {\n    let {\n      contractInterface\n    } = _ref6;\n    return contractInterface;\n  });\n  const enabled = React.useMemo(() => {\n    let enabled = Boolean(enabled_ && contracts.length > 0);\n    if (cacheOnBlock) enabled = Boolean(enabled && blockNumber);\n    return enabled;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: watch && !cacheOnBlock,\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn$9({\n    contractInterfaces\n  }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select: data => {\n      const result = data.map((data, i) => {\n        var _contracts$i, _contracts$i2;\n\n        return contracts[i] ? parseContractResult({\n          contractInterface: (_contracts$i = contracts[i]) === null || _contracts$i === void 0 ? void 0 : _contracts$i.contractInterface,\n          functionName: (_contracts$i2 = contracts[i]) === null || _contracts$i2 === void 0 ? void 0 : _contracts$i2.functionName,\n          data\n        }) : data;\n      });\n      return select ? select(result) : result;\n    },\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst mutationKey$3 = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    request\n  }] = _ref;\n  return [{\n    entity: 'writeContract',\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    request\n  }];\n};\n\nconst mutationFn$2 = _ref2 => {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    mode,\n    overrides,\n    request\n  } = _ref2;\n  return writeContract({\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    mode,\n    overrides,\n    request\n  });\n};\n/**\n * @description Hook for calling an ethers Contract [write](https://docs.ethers.io/v5/api/contract/contract/#Contract--write)\n * method.\n *\n * It is highly recommended to pair this with the [`usePrepareContractWrite` hook](/docs/prepare-hooks/usePrepareContractWrite)\n * to [avoid UX pitfalls](https://wagmi.sh/docs/prepare-hooks/intro#ux-pitfalls-without-prepare-hooks).\n *\n * @example\n * import { useContractWrite, usePrepareContractWrite } from 'wagmi'\n *\n * const { config } = usePrepareContractWrite({\n *  addressOrName: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',\n *  contractInterface: wagmigotchiABI,\n *  functionName: 'feed',\n * })\n * const { data, isLoading, isSuccess, write } = useContractWrite(config)\n *\n */\n\n\nfunction useContractWrite(_ref3) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    mode,\n    overrides,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref3;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$3([{\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    chainId,\n    mode,\n    overrides,\n    request\n  }]), mutationFn$2, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const write = React.useCallback(overrideConfig => {\n    var _overrideConfig$reckl, _overrideConfig$reckl2;\n\n    return mutate({\n      addressOrName,\n      args: (_overrideConfig$reckl = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedArgs) !== null && _overrideConfig$reckl !== void 0 ? _overrideConfig$reckl : args,\n      chainId,\n      contractInterface,\n      functionName,\n      mode: overrideConfig ? 'recklesslyUnprepared' : mode,\n      overrides: (_overrideConfig$reckl2 = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedOverrides) !== null && _overrideConfig$reckl2 !== void 0 ? _overrideConfig$reckl2 : overrides,\n      request\n    });\n  }, [addressOrName, args, chainId, contractInterface, functionName, mode, mutate, overrides, request]);\n  const writeAsync = React.useCallback(overrideConfig => {\n    var _overrideConfig$reckl3, _overrideConfig$reckl4;\n\n    return mutateAsync({\n      addressOrName,\n      args: (_overrideConfig$reckl3 = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedArgs) !== null && _overrideConfig$reckl3 !== void 0 ? _overrideConfig$reckl3 : args,\n      chainId,\n      contractInterface,\n      functionName,\n      mode: overrideConfig ? 'recklesslyUnprepared' : mode,\n      overrides: (_overrideConfig$reckl4 = overrideConfig === null || overrideConfig === void 0 ? void 0 : overrideConfig.recklesslySetUnpreparedOverrides) !== null && _overrideConfig$reckl4 !== void 0 ? _overrideConfig$reckl4 : overrides,\n      request\n    });\n  }, [addressOrName, args, chainId, contractInterface, functionName, mode, mutateAsync, overrides, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write: mode === 'prepared' && !request ? undefined : write,\n    writeAsync: mode === 'prepared' && !request ? undefined : writeAsync\n  };\n}\n\nconst mutationKey$2 = _ref => {\n  let [{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    overrides\n  }] = _ref;\n  return [{\n    entity: 'writeContract',\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    overrides\n  }];\n};\n/** @deprecated */\n\nfunction useDeprecatedContractWrite(_ref2) {\n  let {\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides,\n    signerOrProvider,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref2;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$2([{\n    addressOrName,\n    args,\n    chainId,\n    contractInterface,\n    functionName,\n    overrides\n  }]), _ref3 => {\n    let {\n      args,\n      overrides\n    } = _ref3;\n    return deprecatedWriteContract({\n      addressOrName,\n      args,\n      chainId,\n      contractInterface,\n      functionName,\n      overrides,\n      signerOrProvider\n    });\n  }, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const write = React.useCallback(overrideConfig => mutate({\n    addressOrName,\n    chainId,\n    contractInterface,\n    functionName,\n    signerOrProvider,\n    ...(overrideConfig || {\n      args,\n      overrides\n    })\n  }), [addressOrName, args, chainId, contractInterface, functionName, mutate, overrides, signerOrProvider]);\n  const writeAsync = React.useCallback(overrideConfig => mutateAsync({\n    addressOrName,\n    chainId,\n    contractInterface,\n    functionName,\n    signerOrProvider,\n    ...(overrideConfig || {\n      args,\n      overrides\n    })\n  }), [addressOrName, args, chainId, contractInterface, functionName, mutateAsync, overrides, signerOrProvider]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\nconst queryKey$8 = (_ref, _ref2) => {\n  let {\n    args,\n    addressOrName,\n    functionName,\n    overrides\n  } = _ref;\n  let {\n    chainId,\n    signerAddress\n  } = _ref2;\n  return [{\n    entity: 'prepareContractTransaction',\n    addressOrName,\n    args,\n    chainId,\n    functionName,\n    overrides,\n    signerAddress\n  }];\n};\n\nconst queryFn$8 = _ref3 => {\n  let {\n    contractInterface,\n    signer\n  } = _ref3;\n  return _ref4 => {\n    let {\n      queryKey: [{\n        args,\n        addressOrName,\n        functionName,\n        overrides\n      }]\n    } = _ref4;\n    return prepareWriteContract({\n      args,\n      addressOrName,\n      contractInterface,\n      functionName,\n      overrides,\n      signer\n    });\n  };\n};\n/**\n * @description Hook for preparing a contract write to be sent via [`useContractWrite`](/docs/hooks/useContractWrite).\n *\n * Eagerly fetches the parameters required for sending a contract write transaction such as the gas estimate.\n *\n * @example\n * import { useContractWrite, usePrepareContractWrite } from 'wagmi'\n *\n * const { config } = usePrepareContractWrite({\n *  addressOrName: '0xecb504d39723b0be0e3a9aa33d646642d1051ee1',\n *  contractInterface: wagmigotchiABI,\n *  functionName: 'feed',\n * })\n * const { data, isLoading, isSuccess, write } = useContractWrite(config)\n *\n */\n\n\nfunction usePrepareContractWrite(_ref5) {\n  let {\n    addressOrName,\n    contractInterface,\n    functionName,\n    args,\n    overrides,\n    cacheTime,\n    enabled = true,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref5;\n  const chainId = useChainId();\n  const {\n    data: signer\n  } = useSigner();\n  const prepareContractWriteQuery = useQuery(queryKey$8({\n    addressOrName,\n    functionName,\n    args,\n    overrides\n  }, {\n    chainId,\n    signerAddress: signer === null || signer === void 0 ? void 0 : signer._address\n  }), queryFn$8({\n    contractInterface,\n    signer\n  }), {\n    cacheTime,\n    enabled: Boolean(enabled && signer),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      addressOrName,\n      args,\n      contractInterface,\n      overrides,\n      functionName,\n      request: undefined,\n      mode: 'prepared',\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\nconst queryKey$7 = _ref => {\n  let {\n    address,\n    chainId,\n    formatUnits\n  } = _ref;\n  return [{\n    entity: 'token',\n    address,\n    chainId,\n    formatUnits\n  }];\n};\n\nconst queryFn$7 = _ref2 => {\n  let {\n    queryKey: [{\n      address,\n      chainId,\n      formatUnits\n    }]\n  } = _ref2;\n  if (!address) throw new Error('address is required');\n  return fetchToken({\n    address,\n    chainId,\n    formatUnits\n  });\n};\n\nfunction useToken() {\n  let {\n    address,\n    chainId: chainId_,\n    formatUnits = 'ether',\n    cacheTime,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$7({\n    address,\n    chainId,\n    formatUnits\n  }), queryFn$7, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$6 = _ref => {\n  let {\n    chainId,\n    name\n  } = _ref;\n  return [{\n    entity: 'ensAddress',\n    chainId,\n    name\n  }];\n};\n\nconst queryFn$6 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref2;\n  if (!name) throw new Error('name is required');\n  return fetchEnsAddress({\n    chainId,\n    name\n  });\n};\n\nfunction useEnsAddress() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$6({\n    chainId,\n    name\n  }), queryFn$6, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$5 = _ref => {\n  let {\n    addressOrName,\n    chainId\n  } = _ref;\n  return [{\n    entity: 'ensAvatar',\n    addressOrName,\n    chainId\n  }];\n};\n\nconst queryFn$5 = _ref2 => {\n  let {\n    queryKey: [{\n      addressOrName,\n      chainId\n    }]\n  } = _ref2;\n  if (!addressOrName) throw new Error('addressOrName is required');\n  return fetchEnsAvatar({\n    addressOrName,\n    chainId\n  });\n};\n\nfunction useEnsAvatar() {\n  let {\n    addressOrName,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$5({\n    addressOrName,\n    chainId\n  }), queryFn$5, {\n    cacheTime,\n    enabled: Boolean(enabled && addressOrName && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$4 = _ref => {\n  let {\n    address,\n    chainId\n  } = _ref;\n  return [{\n    entity: 'ensName',\n    address,\n    chainId\n  }];\n};\n\nconst queryFn$4 = _ref2 => {\n  let {\n    queryKey: [{\n      address,\n      chainId\n    }]\n  } = _ref2;\n  if (!address) throw new Error('address is required');\n  return fetchEnsName({\n    address,\n    chainId\n  });\n};\n\nfunction useEnsName() {\n  let {\n    address,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$4({\n    address,\n    chainId\n  }), queryFn$4, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey$3 = _ref => {\n  let {\n    chainId,\n    name\n  } = _ref;\n  return [{\n    entity: 'ensResolver',\n    chainId,\n    name\n  }];\n};\n\nconst queryFn$3 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref2;\n  if (!name) throw new Error('name is required');\n  return fetchEnsResolver({\n    chainId,\n    name\n  });\n};\n\nfunction useEnsResolver() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$3({\n    chainId,\n    name\n  }), queryFn$3, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst mutationKey$1 = args => [{\n  entity: 'sendTransaction',\n  ...args\n}];\n\nconst mutationFn$1 = args => {\n  const {\n    chainId,\n    request\n  } = args;\n  if (!request) throw new Error('request is required');\n  return deprecatedSendTransaction({\n    chainId,\n    request\n  });\n};\n/** @deprecated */\n\n\nfunction useDeprecatedSendTransaction() {\n  let {\n    chainId,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey$1({\n    chainId,\n    request\n  }), mutationFn$1, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sendTransaction = React.useCallback(args => mutate({\n    chainId,\n    request,\n    ...(args !== null && args !== void 0 ? args : {})\n  }), [chainId, mutate, request]);\n  const sendTransactionAsync = React.useCallback(args => mutateAsync({\n    chainId,\n    request,\n    ...(args !== null && args !== void 0 ? args : {})\n  }), [chainId, mutateAsync, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction,\n    sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\nconst queryKey$2 = _ref => {\n  let {\n    chainId,\n    request\n  } = _ref;\n  return [{\n    entity: 'prepareSendTransaction',\n    chainId,\n    request\n  }];\n};\n\nconst queryFn$2 = _ref2 => {\n  let {\n    queryKey: [{\n      request\n    }]\n  } = _ref2;\n  if (!request.to) throw new Error('request.to is required');\n  return prepareSendTransaction({\n    request: { ...request,\n      to: request.to\n    }\n  });\n};\n/**\n * @description Hook for preparing a transaction to be sent via [`useSendTransaction`](/docs/hooks/useSendTransaction).\n *\n * Eagerly fetches the parameters required for sending a transaction such as the gas estimate and resolving an ENS address (if required).\n *\n * @example\n * import { useSendTransaction, usePrepareSendTransaction } from 'wagmi'\n *\n * const config = usePrepareSendTransaction({\n *   to: 'moxey.eth',\n *   value: parseEther('1'),\n * })\n * const result = useSendTransaction(config)\n */\n\n\nfunction usePrepareSendTransaction(_ref3) {\n  let {\n    request,\n    cacheTime,\n    enabled = true,\n    staleTime = 1000 * 60 * 60 * 24,\n    // 24 hours\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = _ref3;\n  const chainId = useChainId();\n  const provider = useProvider();\n  const prepareSendTransactionQuery = useQuery(queryKey$2({\n    request,\n    chainId\n  }), queryFn$2, {\n    cacheTime,\n    enabled: Boolean(enabled && provider && request.to),\n    isDataEqual: deepEqual,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      request: undefined,\n      mode: 'prepared',\n      ...prepareSendTransactionQuery.data\n    }\n  });\n}\n\nconst mutationKey = args => [{\n  entity: 'sendTransaction',\n  ...args\n}];\n\nconst mutationFn = _ref => {\n  let {\n    chainId,\n    mode,\n    request\n  } = _ref;\n  return sendTransaction({\n    chainId,\n    mode,\n    request\n  });\n};\n/**\n * @description Hook for sending a transaction.\n *\n * It is recommended to pair this with the [`usePrepareSendTransaction` hook](/docs/prepare-hooks/usePrepareSendTransaction)\n * to [avoid UX pitfalls](https://wagmi.sh/docs/prepare-hooks/intro#ux-pitfalls-without-prepare-hooks).\n *\n * @example\n * import { useSendTransaction, usePrepareSendTransaction } from 'wagmi'\n *\n * const config = usePrepareSendTransaction({\n *   request: {\n *     to: 'moxey.eth',\n *     value: parseEther('1'),\n *   }\n * })\n * const result = useSendTransaction(config)\n */\n\n\nfunction useSendTransaction(_ref2) {\n  let {\n    chainId,\n    mode,\n    request,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = _ref2;\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({\n    chainId,\n    mode,\n    request\n  }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sendTransaction = React.useCallback(args => {\n    var _args$recklesslySetUn;\n\n    return mutate({\n      chainId,\n      mode,\n      request: (_args$recklesslySetUn = args === null || args === void 0 ? void 0 : args.recklesslySetUnpreparedRequest) !== null && _args$recklesslySetUn !== void 0 ? _args$recklesslySetUn : request\n    });\n  }, [chainId, mode, mutate, request]);\n  const sendTransactionAsync = React.useCallback(args => {\n    var _args$recklesslySetUn2;\n\n    return mutateAsync({\n      chainId,\n      mode,\n      request: (_args$recklesslySetUn2 = args === null || args === void 0 ? void 0 : args.recklesslySetUnpreparedRequest) !== null && _args$recklesslySetUn2 !== void 0 ? _args$recklesslySetUn2 : request\n    });\n  }, [chainId, mode, mutateAsync, request]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === 'prepared' && !request ? undefined : sendTransaction,\n    sendTransactionAsync: mode === 'prepared' && !request ? undefined : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\nconst queryKey$1 = _ref => {\n  let {\n    chainId,\n    hash\n  } = _ref;\n  return [{\n    entity: 'transaction',\n    chainId,\n    hash\n  }];\n};\n\nconst queryFn$1 = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      hash\n    }]\n  } = _ref2;\n  if (!hash) throw new Error('hash is required');\n  return fetchTransaction({\n    chainId,\n    hash\n  });\n};\n/**\n * @description Fetches transaction for hash\n *\n * @example\n * import { useTransaction } from 'wagmi'\n *\n * const result = useTransaction({\n *  chainId: 1,\n *  hash: '0x...',\n * })\n */\n\n\nfunction useTransaction() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    hash,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey$1({\n    chainId,\n    hash\n  }), queryFn$1, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nconst queryKey = _ref => {\n  let {\n    confirmations,\n    chainId,\n    hash,\n    timeout,\n    wait\n  } = _ref;\n  return [{\n    entity: 'waitForTransaction',\n    confirmations,\n    chainId,\n    hash,\n    timeout,\n    wait\n  }];\n};\n\nconst queryFn = _ref2 => {\n  let {\n    queryKey: [{\n      chainId,\n      confirmations,\n      hash,\n      timeout,\n      wait\n    }]\n  } = _ref2;\n  return waitForTransaction({\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait\n  });\n};\n\nfunction useWaitForTransaction() {\n  let {\n    chainId: chainId_,\n    confirmations,\n    hash,\n    timeout,\n    wait,\n    cacheTime,\n    enabled = true,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey({\n    chainId,\n    confirmations,\n    hash,\n    timeout,\n    wait\n  }), queryFn, {\n    cacheTime,\n    enabled: Boolean(enabled && (hash || wait)),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\nexport { Context, WagmiConfig, createClient, deserialize, paginatedIndexesConfig, serialize, useAccount, useBalance, useBlockNumber, useClient, useConnect, useContract, useContractEvent, useContractInfiniteReads, useContractRead, useContractReads, useContractWrite, useDeprecatedContractWrite, useDeprecatedSendTransaction, useDisconnect, useEnsAddress, useEnsAvatar, useEnsName, useEnsResolver, useFeeData, useInfiniteQuery, useNetwork, usePrepareContractWrite, usePrepareSendTransaction, useProvider, useQuery, useSendTransaction, useSignMessage, useSignTypedData, useSigner, useSwitchNetwork, useToken, useTransaction, useWaitForTransaction, useWebSocketProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}