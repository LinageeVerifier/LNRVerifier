{"ast":null,"code":"import _objectSpread from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nvar removeOldestQuery = function removeOldestQuery(_ref) {\n  var persistedClient = _ref.persistedClient;\n\n  var mutations = _toConsumableArray(persistedClient.clientState.mutations);\n\n  var queries = _toConsumableArray(persistedClient.clientState.queries);\n\n  var client = _objectSpread(_objectSpread({}, persistedClient), {}, {\n    clientState: {\n      mutations: mutations,\n      queries: queries\n    }\n  }); // sort queries by dataUpdatedAt (oldest first)\n\n\n  var sortedQueries = _toConsumableArray(queries).sort(function (a, b) {\n    return a.state.dataUpdatedAt - b.state.dataUpdatedAt;\n  }); // clean oldest query\n\n\n  if (sortedQueries.length > 0) {\n    var oldestData = sortedQueries.shift();\n    client.clientState.queries = queries.filter(function (q) {\n      return q !== oldestData;\n    });\n    return client;\n  }\n\n  return undefined;\n};\n\nexport { removeOldestQuery }; //# sourceMappingURL=retryStrategies.mjs.map","map":null,"metadata":{},"sourceType":"module"}