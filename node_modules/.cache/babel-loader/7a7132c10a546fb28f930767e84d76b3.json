{"ast":null,"code":"import _toConsumableArray from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"createConnector\", \"groupIndex\", \"groupName\", \"hidden\", \"index\"],\n    _excluded2 = [\"connector\"];\nimport { darkTheme } from \"./chunk-FRF2GUPO.js\";\nimport { midnightTheme } from \"./chunk-O2CXI27D.js\";\nimport { ConnectButton, DesktopOptions, MobileOptions, RainbowKitAuthenticationProvider, RainbowKitProvider, createAuthenticationAdapter, cssObjectFromTheme, cssStringFromTheme, dialogContent, dialogContentMobile, isAndroid, isHexString, isIOS, isMobile, useAccountModal, useChainId, useChainModal, useConnectModal, useTransactionStore } from \"./chunk-QQHSLNOX.js\";\nimport { lightTheme } from \"./chunk-ATKR4544.js\";\nimport \"./chunk-4QPBWJI3.js\"; // src/wallets/getWalletConnectConnector.ts\n\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\nvar sharedConnectors = /* @__PURE__ */new Map();\n\nfunction createConnector(options) {\n  var connector = new WalletConnectConnector(options);\n  sharedConnectors.set(JSON.stringify(options), connector);\n  return connector;\n}\n\nfunction getWalletConnectConnector(_ref) {\n  var chains = _ref.chains,\n      _ref$qrcode = _ref.qrcode,\n      qrcode = _ref$qrcode === void 0 ? false : _ref$qrcode;\n  var options = {\n    chains: chains,\n    options: {\n      qrcode: qrcode\n    }\n  };\n  var serializedOptions = JSON.stringify(options);\n  var sharedConnector = sharedConnectors.get(serializedOptions);\n  return sharedConnector != null ? sharedConnector : createConnector(options);\n} // src/wallets/walletConnectors/argent/argent.ts\n\n\nvar argent = function argent(_ref2) {\n  var chains = _ref2.chains;\n  return {\n    id: \"argent\",\n    name: \"Argent\",\n    iconUrl: function () {\n      var _iconUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import(\"./argent-5L2T73SY.js\");\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function iconUrl() {\n        return _iconUrl.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#fff\",\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=im.argent.contractwalletclient\",\n      ios: \"https://apps.apple.com/us/app/argent/id1358741926\",\n      qrCode: \"https://argent.link/app\"\n    },\n    createConnector: function createConnector() {\n      var connector = getWalletConnectConnector({\n        chains: chains\n      });\n      return {\n        connector: connector,\n        mobile: {\n          getUri: function () {\n            var _getUri = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context2.sent.connector.uri;\n                      return _context2.abrupt(\"return\", isAndroid() ? uri : \"https://argent.link/app/wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            function getUri() {\n              return _getUri.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        },\n        qrCode: {\n          getUri: function () {\n            var _getUri2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      return _context3.abrupt(\"return\", _context3.sent.connector.uri);\n\n                    case 3:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            function getUri() {\n              return _getUri2.apply(this, arguments);\n            }\n\n            return getUri;\n          }(),\n          instructions: {\n            learnMoreUrl: \"https://www.argent.xyz/learn/what-is-a-crypto-wallet/\",\n            steps: [{\n              description: \"Put Argent on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Argent app\"\n            }, {\n              description: \"Create a wallet and username, or import an existing wallet.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n              step: \"scan\",\n              title: \"Tap the Scan QR button\"\n            }]\n          }\n        }\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/brave/brave.ts\n\n\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\n\nvar brave = function brave(_ref3) {\n  var chains = _ref3.chains,\n      shimDisconnect = _ref3.shimDisconnect;\n\n  var _a;\n\n  return {\n    id: \"brave\",\n    name: \"Brave Wallet\",\n    iconUrl: function () {\n      var _iconUrl2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return import(\"./brave-GT2DMA7C.js\");\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function iconUrl() {\n        return _iconUrl2.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#fff\",\n    installed: typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isBraveWallet) === true,\n    downloadUrls: {},\n    createConnector: function createConnector() {\n      return {\n        connector: new InjectedConnector({\n          chains: chains,\n          options: {\n            shimDisconnect: shimDisconnect\n          }\n        })\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/coinbase/coinbase.ts\n\n\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\n\nvar coinbase = function coinbase(_ref4) {\n  var appName = _ref4.appName,\n      chains = _ref4.chains;\n\n  var _a;\n\n  var isCoinbaseWalletInjected = typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isCoinbaseWallet) === true;\n  return {\n    id: \"coinbase\",\n    name: \"Coinbase Wallet\",\n    shortName: \"Coinbase\",\n    iconUrl: function () {\n      var _iconUrl3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return import(\"./coinbase-G3UAZG2M.js\");\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function iconUrl() {\n        return _iconUrl3.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconAccent: \"#2c5ff6\",\n    iconBackground: \"#2c5ff6\",\n    installed: isCoinbaseWalletInjected || void 0,\n    downloadUrls: {\n      browserExtension: \"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad\",\n      android: \"https://play.google.com/store/apps/details?id=org.toshi\",\n      ios: \"https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455\",\n      qrCode: \"https://coinbase-wallet.onelink.me/q5Sx/fdb9b250\"\n    },\n    createConnector: function createConnector() {\n      var ios = isIOS();\n      var connector = new CoinbaseWalletConnector({\n        chains: chains,\n        options: {\n          appName: appName,\n          headlessMode: true\n        }\n      });\n\n      var getUri = /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return connector.getProvider();\n\n                case 2:\n                  return _context6.abrupt(\"return\", _context6.sent.qrUrl);\n\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function getUri() {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n\n      return _objectSpread({\n        connector: connector\n      }, ios ? {} : {\n        mobile: {\n          getUri: getUri\n        },\n        qrCode: {\n          getUri: getUri,\n          instructions: {\n            learnMoreUrl: \"https://www.coinbase.com/learn/tips-and-tutorials/how-to-set-up-a-crypto-wallet\",\n            steps: [{\n              description: \"We recommend putting Coinbase Wallet on your home screen for quicker access.\",\n              step: \"install\",\n              title: \"Open the Coinbase Wallet app\"\n            }, {\n              description: \"You can easily backup your wallet using the cloud backup feature.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n              step: \"scan\",\n              title: \"Tap the scan button\"\n            }]\n          }\n        },\n        extension: {\n          instructions: {\n            steps: [{\n              description: \"We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.\",\n              step: \"install\",\n              title: \"Install the Coinbase Wallet extension\"\n            }, {\n              description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Once you set up your wallet, click below to refresh the browser and load up the extension.\",\n              step: \"refresh\",\n              title: \"Refresh your browser\"\n            }]\n          }\n        }\n      });\n    }\n  };\n}; // src/wallets/walletConnectors/imToken/imToken.ts\n\n\nvar imToken = function imToken(_ref6) {\n  var chains = _ref6.chains;\n  return {\n    id: \"imToken\",\n    name: \"imToken\",\n    iconUrl: function () {\n      var _iconUrl4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return import(\"./imToken-LFPF6XA3.js\");\n\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function iconUrl() {\n        return _iconUrl4.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#098de6\",\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=im.token.app\",\n      ios: \"https://itunes.apple.com/us/app/imtoken2/id1384798940\",\n      qrCode: \"https://token.im/download\"\n    },\n    createConnector: function createConnector() {\n      var connector = getWalletConnectConnector({\n        chains: chains\n      });\n      return {\n        connector: connector,\n        mobile: {\n          getUri: function () {\n            var _getUri3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context8.sent.connector.uri;\n                      return _context8.abrupt(\"return\", \"imtokenv2://wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8);\n            }));\n\n            function getUri() {\n              return _getUri3.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        },\n        qrCode: {\n          getUri: function () {\n            var _getUri4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n              return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      return _context9.abrupt(\"return\", _context9.sent.connector.uri);\n\n                    case 3:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9);\n            }));\n\n            function getUri() {\n              return _getUri4.apply(this, arguments);\n            }\n\n            return getUri;\n          }(),\n          instructions: {\n            learnMoreUrl: typeof window !== \"undefined\" && window.navigator.language.includes(\"zh\") ? \"https://support.token.im/hc/zh-cn/categories/360000925393\" : \"https://support.token.im/hc/en-us/categories/360000925393\",\n            steps: [{\n              description: \"Put imToken app on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the imToken app\"\n            }, {\n              description: \"Create a new wallet or import an existing one.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Choose New Connection, then scan the QR code and confirm the prompt to connect.\",\n              step: \"scan\",\n              title: \"Tap Scanner Icon in top right corner\"\n            }]\n          }\n        }\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/injected/injected.ts\n\n\nimport { InjectedConnector as InjectedConnector2 } from \"wagmi/connectors/injected\";\n\nvar injected = function injected(_ref7) {\n  var chains = _ref7.chains,\n      shimDisconnect = _ref7.shimDisconnect;\n  return {\n    id: \"injected\",\n    name: \"Injected Wallet\",\n    iconUrl: function () {\n      var _iconUrl5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return import(\"./injected-NV2ZDWID.js\");\n\n              case 2:\n                return _context10.abrupt(\"return\", _context10.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function iconUrl() {\n        return _iconUrl5.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#fff\",\n    hidden: function hidden(_ref8) {\n      var wallets = _ref8.wallets;\n      return wallets.some(function (wallet2) {\n        return wallet2.installed && (wallet2.connector instanceof InjectedConnector2 || wallet2.id === \"coinbase\");\n      });\n    },\n    createConnector: function createConnector() {\n      return {\n        connector: new InjectedConnector2({\n          chains: chains,\n          options: {\n            shimDisconnect: shimDisconnect\n          }\n        })\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/ledger/ledger.ts\n\n\nvar ledger = function ledger(_ref9) {\n  var chains = _ref9.chains;\n  return {\n    id: \"ledger\",\n    iconBackground: \"#000\",\n    name: \"Ledger Live\",\n    iconUrl: function () {\n      var _iconUrl6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return import(\"./ledger-FR4A2GHX.js\");\n\n              case 2:\n                return _context11.abrupt(\"return\", _context11.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function iconUrl() {\n        return _iconUrl6.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=com.ledger.live\",\n      ios: \"https://apps.apple.com/us/app/ledger-live-web3-wallet/id1361671700\",\n      qrCode: \"https://www.ledger.com/ledger-live/download#download-device-2\"\n    },\n    createConnector: function createConnector() {\n      var connector = getWalletConnectConnector({\n        chains: chains\n      });\n      return {\n        connector: connector,\n        mobile: {\n          getUri: function () {\n            var _getUri5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      _context12.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context12.sent.connector.uri;\n                      return _context12.abrupt(\"return\", isAndroid() ? uri : \"ledgerlive://wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12);\n            }));\n\n            function getUri() {\n              return _getUri5.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        },\n        desktop: {\n          getUri: function () {\n            var _getUri6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      _context13.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context13.sent.connector.uri;\n                      return _context13.abrupt(\"return\", \"ledgerlive://wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13);\n            }));\n\n            function getUri() {\n              return _getUri6.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        }\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/metaMask/metaMask.ts\n\n\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\n\nfunction isMetaMask(ethereum) {\n  var isMetaMask2 = Boolean(ethereum.isMetaMask);\n\n  if (!isMetaMask2) {\n    return false;\n  }\n\n  if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) {\n    return false;\n  }\n\n  if (ethereum.isTokenPocket) {\n    return false;\n  }\n\n  if (ethereum.isTokenary) {\n    return false;\n  }\n\n  return true;\n}\n\nvar metaMask = function metaMask(_ref10) {\n  var chains = _ref10.chains,\n      shimDisconnect = _ref10.shimDisconnect;\n  var isMetaMaskInjected = typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\" && isMetaMask(window.ethereum);\n  var shouldUseWalletConnect = !isMetaMaskInjected;\n  return {\n    id: \"metaMask\",\n    name: \"MetaMask\",\n    iconUrl: function () {\n      var _iconUrl7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return import(\"./metaMask-CP52H6U7.js\");\n\n              case 2:\n                return _context14.abrupt(\"return\", _context14.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function iconUrl() {\n        return _iconUrl7.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconAccent: \"#f6851a\",\n    iconBackground: \"#fff\",\n    installed: !shouldUseWalletConnect ? isMetaMaskInjected : void 0,\n    downloadUrls: {\n      browserExtension: \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\",\n      android: \"https://play.google.com/store/apps/details?id=io.metamask\",\n      ios: \"https://apps.apple.com/us/app/metamask/id1438144202\",\n      qrCode: \"https://metamask.io/download/\"\n    },\n    createConnector: function createConnector() {\n      var connector = shouldUseWalletConnect ? getWalletConnectConnector({\n        chains: chains\n      }) : new MetaMaskConnector({\n        chains: chains,\n        options: {\n          shimDisconnect: shimDisconnect\n        }\n      });\n\n      var getUri = /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n          var uri;\n          return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  _context15.next = 2;\n                  return connector.getProvider();\n\n                case 2:\n                  uri = _context15.sent.connector.uri;\n                  return _context15.abrupt(\"return\", isAndroid() ? uri : \"https://metamask.app.link/wc?uri=\".concat(encodeURIComponent(uri)));\n\n                case 4:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function getUri() {\n          return _ref11.apply(this, arguments);\n        };\n      }();\n\n      return {\n        connector: connector,\n        mobile: {\n          getUri: shouldUseWalletConnect ? getUri : void 0\n        },\n        qrCode: shouldUseWalletConnect ? {\n          getUri: getUri,\n          instructions: {\n            learnMoreUrl: \"https://metamask.io/faqs/\",\n            steps: [{\n              description: \"We recommend putting MetaMask on your home screen for quicker access.\",\n              step: \"install\",\n              title: \"Open the MetaMask app\"\n            }, {\n              description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n              step: \"scan\",\n              title: \"Tap the scan button\"\n            }]\n          }\n        } : void 0,\n        extension: {\n          learnMoreUrl: \"https://metamask.io/faqs/\",\n          instructions: {\n            steps: [{\n              description: \"We recommend pinning MetaMask to your taskbar for quicker access to your wallet.\",\n              step: \"install\",\n              title: \"Install the MetaMask extension\"\n            }, {\n              description: \"Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Once you set up your wallet, click below to refresh the browser and load up the extension.\",\n              step: \"refresh\",\n              title: \"Refresh your browser\"\n            }]\n          }\n        }\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/omni/omni.ts\n\n\nvar omni = function omni(_ref12) {\n  var chains = _ref12.chains;\n  return {\n    id: \"omni\",\n    name: \"Omni\",\n    iconUrl: function () {\n      var _iconUrl8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return import(\"./omni-C5PCT6LW.js\");\n\n              case 2:\n                return _context16.abrupt(\"return\", _context16.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function iconUrl() {\n        return _iconUrl8.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#000\",\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=fi.steakwallet.app\",\n      ios: \"https://itunes.apple.com/us/app/id1569375204\",\n      qrCode: \"https://omniwallet.app.link\"\n    },\n    createConnector: function createConnector() {\n      var connector = getWalletConnectConnector({\n        chains: chains\n      });\n      return {\n        connector: connector,\n        mobile: {\n          getUri: function () {\n            var _getUri7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context17.sent.connector.uri;\n                      return _context17.abrupt(\"return\", isAndroid() ? uri : \"https://links.steakwallet.fi/wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17);\n            }));\n\n            function getUri() {\n              return _getUri7.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        },\n        qrCode: {\n          getUri: function () {\n            var _getUri8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n              return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      _context18.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      return _context18.abrupt(\"return\", _context18.sent.connector.uri);\n\n                    case 3:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18);\n            }));\n\n            function getUri() {\n              return _getUri8.apply(this, arguments);\n            }\n\n            return getUri;\n          }(),\n          instructions: {\n            learnMoreUrl: \"https://omni.app/support\",\n            steps: [{\n              description: \"Add Omni to your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Omni app\"\n            }, {\n              description: \"Create a new wallet or import an existing one.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect.\",\n              step: \"scan\",\n              title: \"Tap the QR icon and scan\"\n            }]\n          }\n        }\n      };\n    }\n  };\n};\n\nvar steak = omni; // src/wallets/walletConnectors/rainbow/rainbow.ts\n\nvar rainbow = function rainbow(_ref13) {\n  var chains = _ref13.chains;\n  return {\n    id: \"rainbow\",\n    name: \"Rainbow\",\n    iconUrl: function () {\n      var _iconUrl9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return import(\"./rainbow-MRMCEQFY.js\");\n\n              case 2:\n                return _context19.abrupt(\"return\", _context19.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      function iconUrl() {\n        return _iconUrl9.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#0c2f78\",\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=me.rainbow\",\n      ios: \"https://apps.apple.com/us/app/rainbow-ethereum-wallet/id1457119021\",\n      qrCode: \"https://rainbow.download\"\n    },\n    createConnector: function createConnector() {\n      var connector = getWalletConnectConnector({\n        chains: chains\n      });\n      return {\n        connector: connector,\n        mobile: {\n          getUri: function () {\n            var _getUri9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n                while (1) {\n                  switch (_context20.prev = _context20.next) {\n                    case 0:\n                      _context20.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context20.sent.connector.uri;\n                      return _context20.abrupt(\"return\", isAndroid() ? uri : \"https://rnbwapp.com/wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context20.stop();\n                  }\n                }\n              }, _callee20);\n            }));\n\n            function getUri() {\n              return _getUri9.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        },\n        qrCode: {\n          getUri: function () {\n            var _getUri10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n              return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      _context21.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      return _context21.abrupt(\"return\", _context21.sent.connector.uri);\n\n                    case 3:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21);\n            }));\n\n            function getUri() {\n              return _getUri10.apply(this, arguments);\n            }\n\n            return getUri;\n          }(),\n          instructions: {\n            learnMoreUrl: \"https://learn.rainbow.me/connect-your-wallet-to-a-website-or-app\",\n            steps: [{\n              description: \"We recommend putting Rainbow on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Rainbow app\"\n            }, {\n              description: \"You can easily backup your wallet using our backup feature on your phone.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"After you scan, a connection prompt will appear for you to connect your wallet.\",\n              step: \"scan\",\n              title: \"Tap the scan button\"\n            }]\n          }\n        }\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/trust/trust.ts\n\n\nimport { InjectedConnector as InjectedConnector3 } from \"wagmi/connectors/injected\";\n\nvar trust = function trust(_ref14) {\n  var chains = _ref14.chains,\n      shimDisconnect = _ref14.shimDisconnect;\n  return {\n    id: \"trust\",\n    name: \"Trust Wallet\",\n    iconUrl: function () {\n      var _iconUrl10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return import(\"./trust-V37V6CEN.js\");\n\n              case 2:\n                return _context22.abrupt(\"return\", _context22.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function iconUrl() {\n        return _iconUrl10.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#fff\",\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp\",\n      ios: \"https://apps.apple.com/us/app/trust-crypto-bitcoin-wallet/id1288339409\",\n      qrCode: \"https://link.trustwallet.com\"\n    },\n    createConnector: function createConnector() {\n      var _a;\n\n      var inAppBrowser = Boolean(typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isTrust));\n\n      if (inAppBrowser) {\n        return {\n          connector: new InjectedConnector3({\n            chains: chains,\n            options: {\n              shimDisconnect: shimDisconnect\n            }\n          })\n        };\n      }\n\n      var connector = getWalletConnectConnector({\n        chains: chains\n      });\n      return {\n        connector: connector,\n        mobile: {\n          getUri: function () {\n            var _getUri11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n              var uri;\n              return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n                while (1) {\n                  switch (_context23.prev = _context23.next) {\n                    case 0:\n                      _context23.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      uri = _context23.sent.connector.uri;\n                      return _context23.abrupt(\"return\", isAndroid() ? uri : \"https://link.trustwallet.com/wc?uri=\".concat(encodeURIComponent(uri)));\n\n                    case 4:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }\n              }, _callee23);\n            }));\n\n            function getUri() {\n              return _getUri11.apply(this, arguments);\n            }\n\n            return getUri;\n          }()\n        },\n        qrCode: {\n          getUri: function () {\n            var _getUri12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n              return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n                while (1) {\n                  switch (_context24.prev = _context24.next) {\n                    case 0:\n                      _context24.next = 2;\n                      return connector.getProvider();\n\n                    case 2:\n                      return _context24.abrupt(\"return\", _context24.sent.connector.uri);\n\n                    case 3:\n                    case \"end\":\n                      return _context24.stop();\n                  }\n                }\n              }, _callee24);\n            }));\n\n            function getUri() {\n              return _getUri12.apply(this, arguments);\n            }\n\n            return getUri;\n          }(),\n          instructions: {\n            learnMoreUrl: \"https://trustwallet.com/blog/an-introduction-to-trustwallet\",\n            steps: [{\n              description: \"Put Trust Wallet on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Trust Wallet app\"\n            }, {\n              description: \"Create a new wallet or import an existing one.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Choose New Connection, then scan the QR code and confirm the prompt to connect.\",\n              step: \"scan\",\n              title: \"Tap WalletConnect in Settings\"\n            }]\n          }\n        }\n      };\n    }\n  };\n}; // src/wallets/walletConnectors/walletConnect/walletConnect.ts\n\n\nvar walletConnect = function walletConnect(_ref15) {\n  var chains = _ref15.chains;\n  return {\n    id: \"walletConnect\",\n    name: \"WalletConnect\",\n    iconUrl: function () {\n      var _iconUrl11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return import(\"./walletConnect-WGMZ526J.js\");\n\n              case 2:\n                return _context25.abrupt(\"return\", _context25.sent.default);\n\n              case 3:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function iconUrl() {\n        return _iconUrl11.apply(this, arguments);\n      }\n\n      return iconUrl;\n    }(),\n    iconBackground: \"#3b99fc\",\n    createConnector: function createConnector() {\n      var ios = isIOS();\n      var connector = getWalletConnectConnector({\n        chains: chains,\n        qrcode: ios\n      });\n\n      var getUri = /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n          return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n            while (1) {\n              switch (_context26.prev = _context26.next) {\n                case 0:\n                  _context26.next = 2;\n                  return connector.getProvider();\n\n                case 2:\n                  return _context26.abrupt(\"return\", _context26.sent.connector.uri);\n\n                case 3:\n                case \"end\":\n                  return _context26.stop();\n              }\n            }\n          }, _callee26);\n        }));\n\n        return function getUri() {\n          return _ref16.apply(this, arguments);\n        };\n      }();\n\n      return _objectSpread({\n        connector: connector\n      }, ios ? {} : {\n        mobile: {\n          getUri: getUri\n        },\n        qrCode: {\n          getUri: getUri\n        }\n      });\n    }\n  };\n}; // src/wallets/walletConnectors/index.ts\n\n\nvar wallet = {\n  argent: argent,\n  brave: brave,\n  coinbase: coinbase,\n  imToken: imToken,\n  injected: injected,\n  ledger: ledger,\n  metaMask: metaMask,\n  omni: omni,\n  rainbow: rainbow,\n  steak: steak,\n  trust: trust,\n  walletConnect: walletConnect\n}; // src/wallets/connectorsForWallets.ts\n\nimport { WalletConnectConnector as WalletConnectConnector2 } from \"wagmi/connectors/walletConnect\"; // src/utils/omitUndefinedValues.ts\n\nfunction omitUndefinedValues(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(function (_ref17) {\n    var _ref18 = _slicedToArray(_ref17, 2),\n        _key = _ref18[0],\n        value = _ref18[1];\n\n    return value !== void 0;\n  }));\n} // src/wallets/connectorsForWallets.ts\n\n\nvar connectorsForWallets = function connectorsForWallets(walletList) {\n  return function () {\n    var index = -1;\n    var connectors = [];\n    var visibleWallets = [];\n    var potentiallyHiddenWallets = [];\n    var walletInstances = [];\n    walletList.forEach(function (_ref19, groupIndex) {\n      var groupName = _ref19.groupName,\n          wallets = _ref19.wallets;\n      wallets.forEach(function (wallet2) {\n        index++;\n\n        if ((wallet2 == null ? void 0 : wallet2.iconAccent) && !isHexString(wallet2 == null ? void 0 : wallet2.iconAccent)) {\n          throw new Error(\"Property `iconAccent` is not a hex value for wallet: \".concat(wallet2.name));\n        }\n\n        var walletListItem = _objectSpread(_objectSpread({}, wallet2), {}, {\n          groupIndex: groupIndex,\n          groupName: groupName,\n          index: index\n        });\n\n        if (typeof wallet2.hidden === \"function\") {\n          potentiallyHiddenWallets.push(walletListItem);\n        } else {\n          visibleWallets.push(walletListItem);\n        }\n      });\n    });\n    var walletListItems = [].concat(visibleWallets, potentiallyHiddenWallets);\n    walletListItems.forEach(function (_ref20) {\n      var createConnector2 = _ref20.createConnector,\n          groupIndex = _ref20.groupIndex,\n          groupName = _ref20.groupName,\n          hidden = _ref20.hidden,\n          index2 = _ref20.index,\n          walletMeta = _objectWithoutProperties(_ref20, _excluded);\n\n      if (typeof hidden === \"function\") {\n        var isHidden = hidden({\n          wallets: _toConsumableArray(walletInstances.map(function (_ref21) {\n            var connector2 = _ref21.connector,\n                id = _ref21.id,\n                installed = _ref21.installed;\n            return {\n              connector: connector2,\n              id: id,\n              installed: installed\n            };\n          }))\n        });\n\n        if (isHidden) {\n          return;\n        }\n      }\n\n      var _omitUndefinedValues = omitUndefinedValues(createConnector2()),\n          connector = _omitUndefinedValues.connector,\n          connectionMethods = _objectWithoutProperties(_omitUndefinedValues, _excluded2);\n\n      var walletConnectModalConnector;\n\n      if (walletMeta.id === \"walletConnect\" && connectionMethods.qrCode && !isMobile()) {\n        var chains = connector.chains,\n            options = connector.options;\n        walletConnectModalConnector = new WalletConnectConnector2({\n          chains: chains,\n          options: _objectSpread(_objectSpread({}, options), {}, {\n            qrcode: true\n          })\n        });\n        connectors.push(walletConnectModalConnector);\n      }\n\n      var walletInstance = _objectSpread(_objectSpread({\n        connector: connector,\n        groupIndex: groupIndex,\n        groupName: groupName,\n        index: index2,\n        walletConnectModalConnector: walletConnectModalConnector\n      }, walletMeta), connectionMethods);\n\n      walletInstances.push(walletInstance);\n\n      if (!connectors.includes(connector)) {\n        connectors.push(connector);\n        connector._wallets = [];\n      }\n\n      connector._wallets.push(walletInstance);\n    });\n    return connectors;\n  };\n}; // src/wallets/getDefaultWallets.ts\n\n\nvar getDefaultWallets = function getDefaultWallets(_ref22) {\n  var appName = _ref22.appName,\n      chains = _ref22.chains;\n  var wallets = [{\n    groupName: \"Popular\",\n    wallets: [injected({\n      chains: chains\n    }), rainbow({\n      chains: chains\n    }), coinbase({\n      appName: appName,\n      chains: chains\n    }), metaMask({\n      chains: chains\n    }), walletConnect({\n      chains: chains\n    }), brave({\n      chains: chains\n    })]\n  }];\n  return {\n    connectors: connectorsForWallets(wallets),\n    wallets: wallets\n  };\n}; // src/transactions/useAddRecentTransaction.ts\n\n\nimport { useCallback } from \"react\";\nimport { useAccount } from \"wagmi\";\n\nfunction useAddRecentTransaction() {\n  var store = useTransactionStore();\n\n  var _useAccount = useAccount(),\n      address = _useAccount.address;\n\n  var chainId = useChainId();\n  return useCallback(function (transaction) {\n    if (!address || !chainId) {\n      throw new Error(\"No address or chain ID found\");\n    }\n\n    store.addTransaction(address, chainId, transaction);\n  }, [store, address, chainId]);\n} // src/__private__/index.ts\n\n\nvar __private__ = {\n  DesktopOptions: DesktopOptions,\n  dialogContent: dialogContent,\n  dialogContentMobile: dialogContentMobile,\n  MobileOptions: MobileOptions\n};\nexport { ConnectButton, RainbowKitAuthenticationProvider, RainbowKitProvider, __private__, connectorsForWallets, createAuthenticationAdapter, cssObjectFromTheme, cssStringFromTheme, darkTheme, getDefaultWallets, getWalletConnectConnector, lightTheme, midnightTheme, useAccountModal, useAddRecentTransaction, useChainModal, useConnectModal, wallet };","map":null,"metadata":{},"sourceType":"module"}