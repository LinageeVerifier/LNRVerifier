{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/danie/OneDrive/Desktop/work on this/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError } from './types';\nexport var FunctionsClient = /*#__PURE__*/function () {\n  function FunctionsClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? {} : _ref$headers,\n        customFetch = _ref.customFetch;\n\n    _classCallCheck(this, FunctionsClient);\n\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(customFetch);\n  }\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n\n\n  _createClass(FunctionsClient, [{\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     */\n\n  }, {\n    key: \"invoke\",\n    value: function invoke(functionName) {\n      var invokeOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers, functionArgs, _headers, body, response, isRelayError, responseType, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                headers = invokeOptions.headers, functionArgs = invokeOptions.body;\n                _headers = {};\n\n                if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n                  if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n                    // will work for File as File inherits Blob\n                    // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                    _headers['Content-Type'] = 'application/octet-stream';\n                    body = functionArgs;\n                  } else if (typeof functionArgs === 'string') {\n                    // plain string\n                    _headers['Content-Type'] = 'text/plain';\n                    body = functionArgs;\n                  } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                    // don't set content-type headers\n                    // Request will automatically add the right boundary value\n                    body = functionArgs;\n                  } else {\n                    // default, assume this is JSON\n                    _headers['Content-Type'] = 'application/json';\n                    body = JSON.stringify(functionArgs);\n                  }\n                }\n\n                _context.next = 6;\n                return this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                  method: 'POST',\n                  // headers priority is (high to low):\n                  // 1. invoke-level headers\n                  // 2. client-level headers\n                  // 3. default Content-Type header\n                  headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                  body: body\n                }).catch(function (fetchError) {\n                  throw new FunctionsFetchError(fetchError);\n                });\n\n              case 6:\n                response = _context.sent;\n                isRelayError = response.headers.get('x-relay-error');\n\n                if (!(isRelayError && isRelayError === 'true')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                throw new FunctionsRelayError(response);\n\n              case 10:\n                if (response.ok) {\n                  _context.next = 12;\n                  break;\n                }\n\n                throw new FunctionsHttpError(response);\n\n              case 12:\n                responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n\n                if (!(responseType === 'application/json')) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 16;\n                return response.json();\n\n              case 16:\n                data = _context.sent;\n                _context.next = 34;\n                break;\n\n              case 19:\n                if (!(responseType === 'application/octet-stream')) {\n                  _context.next = 25;\n                  break;\n                }\n\n                _context.next = 22;\n                return response.blob();\n\n              case 22:\n                data = _context.sent;\n                _context.next = 34;\n                break;\n\n              case 25:\n                if (!(responseType === 'multipart/form-data')) {\n                  _context.next = 31;\n                  break;\n                }\n\n                _context.next = 28;\n                return response.formData();\n\n              case 28:\n                data = _context.sent;\n                _context.next = 34;\n                break;\n\n              case 31:\n                _context.next = 33;\n                return response.text();\n\n              case 33:\n                data = _context.sent;\n\n              case 34:\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n\n              case 37:\n                _context.prev = 37;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: _context.t0\n                });\n\n              case 40:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 37]]);\n      }));\n    }\n  }]);\n\n  return FunctionsClient;\n}(); //# sourceMappingURL=FunctionsClient.js.map","map":null,"metadata":{},"sourceType":"module"}